package Presentacion;

import java.awt.Component;
import java.awt.Image;
import java.io.File;
import java.util.Arrays;
import java.util.Date;
import java.util.Iterator;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;
import javax.swing.JTree;
import logica.DT.DTCanal;
import logica.DT.DTCategoria;
import logica.DT.DTLista;
import logica.DT.DTListaUsuario;
import logica.DT.DTUsuario;
import logica.DT.DTValoracion;
import logica.DT.DTVideo;
import logica.DT.DTVideoUsuario;
import logica.Fabrica;
import logica.ISistema;
import logica.Manejador;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import logica.Comentario;
import logica.DT.DTComentario;
import logica.Lista;
import logica.Usuario;
import logica.Video;

public class Sistema extends javax.swing.JFrame {

    public ISistema s = null;
    public Manejador m = null;
    public DTUsuario usuarioSeleccionado;
    public Usuario UsuarioActual;
    public String videoSeleccionado;
    
    
    public Sistema() {
        //Prueba github lala
        //ComentarioFacundo1
        this.setExtendedState(MAXIMIZED_BOTH);
        s = Fabrica.getInstance();
        m = Manejador.getinstance();
        initComponents();
        
        AltaVideo.setVisible(false);
        AltaUsuario.setVisible(false);
        CrearLista.setVisible(false);
        VerCategorias.setVisible(false);
        VerVideo.setVisible(false);
        VerUsuario.setVisible(false);
        OperacionesSobreUsuarios.setVisible(false);
        SeguirUsuario.setVisible(false);
        DejarSeguir.setVisible(false);
        OpcionesCategoria.setVisible(false);
        verLista.setVisible(false);
        AgregarVideoALista.setVisible(false);
        QuitarVideoDeLista.setVisible(false);
        ConsultaLista.setVisible(false);
        
        //cargarUsuarios();
        //cargarCategorias();
        
    }

     /*private void centrar(JInternalFrame mostrar) {
        int x = (Menu.getHeight() - mostrar.getHeight()) / 2;
        int y = (Menu.getWidth() - mostrar.getWidth()) / 2;
        mostrar.setLocation(y, x);
        mostrar.setVisible(true);
    }*/

   /* private void centrar(JInternalFrame mostrar, JInternalFrame esconder) {
        centrar(mostrar);
        esconder.setVisible(false);
    }*/
    
    
    /*private void cargarUsuarios(){
        DTUsuario u = new DTUsuario("gime","1234", "Gimena", "Deleon", "gime@gmail", new Date(), "", "");
        DTCanal canal = new DTCanal("canal", "desc", false, null, null);
        s.altaUsuario(u, canal);
        u = new DTUsuario("fede","1234", "Federico", "Diaz", "fede@gmail", new Date(), "", "");
        canal = new DTCanal("nombreCanal", "desc", false, null, null);
        s.altaUsuario(u, canal);
        u = new DTUsuario("kuki","1234", "Eugenia", "Cabrera", "kuki@gmail", new Date(), "", "");
        canal = new DTCanal("canalKuki", "desc", false, null, null);
        s.altaUsuario(u, canal);
        u = new DTUsuario("Facu95","FacundoBauza25", "Facundo", "Bauza", "fbauza2014@gmail.com", new Date(), "", "");
        canal = new DTCanal("El Facu0", "lo que sea", false, null, null);
        s.altaUsuario(u, canal);
    }*/
    
    private void cargarCategorias(){
        DTCategoria cat = new DTCategoria("Comida");
        s.altaCategoria(cat);
        cat = new DTCategoria("Deportes");
        s.altaCategoria(cat);
        cat = new DTCategoria("Juegos");
        s.altaCategoria(cat);
                
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ConsultaLista = new javax.swing.JInternalFrame();
        ScrollerListRep1 = new javax.swing.JScrollPane();
        ListaVideosModel = new javax.swing.JList<>();
        Privacidad1 = new javax.swing.JCheckBox();
        MostrarNombre1 = new javax.swing.JTextField();
        MostrarTipo1 = new javax.swing.JTextField();
        NombreLabelInfo1 = new javax.swing.JLabel();
        Tipo = new javax.swing.JLabel();
        ScrollerListRep2 = new javax.swing.JScrollPane();
        ListaDeListasRep1 = new javax.swing.JList<>();
        ConsultarVideo = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        MostrarCatLista = new javax.swing.JTextField();
        CrearLista = new javax.swing.JInternalFrame();
        NomListaRep = new javax.swing.JTextField();
        PrivacidadCheck = new javax.swing.JCheckBox();
        ConfirmarListPriv = new javax.swing.JButton();
        UsuarioComboBox = new javax.swing.JComboBox<>();
        porDefecto = new javax.swing.JCheckBox();
        ComboBoxCategoria = new javax.swing.JComboBox();
        Nombreliostlabel = new javax.swing.JLabel();
        SeguirUsuario = new javax.swing.JInternalFrame();
        SeguirButton = new javax.swing.JButton();
        ASeguir = new javax.swing.JComboBox<>();
        DejarSeguir = new javax.swing.JInternalFrame();
        SeguirButton1 = new javax.swing.JButton();
        ListarQuitar = new javax.swing.JComboBox<>();
        VerVideo = new javax.swing.JInternalFrame();
        Scrollercomments = new javax.swing.JScrollPane();
        Comentarios = new javax.swing.JTree();
        PrivadoCheck = new javax.swing.JCheckBox();
        CambioNombre = new javax.swing.JTextField();
        CambioDuracion = new javax.swing.JTextField();
        CambioUrrl = new javax.swing.JTextField();
        CambioDescrip = new javax.swing.JTextField();
        ComentarVideoButton = new javax.swing.JButton();
        CambioCategorias = new javax.swing.JComboBox<>();
        confirmarCambiosVideo = new javax.swing.JButton();
        cambioFecha = new com.toedter.calendar.JDateChooser();
        Nombrelabl = new javax.swing.JLabel();
        URLLAbl = new javax.swing.JLabel();
        DuracionLabl = new javax.swing.JLabel();
        DescLabl = new javax.swing.JLabel();
        Fechalabl = new javax.swing.JLabel();
        FechaComentValor = new com.toedter.calendar.JDateChooser();
        ComentarioComent = new javax.swing.JTextField();
        ComentLabl = new javax.swing.JLabel();
        NickNameLabl = new javax.swing.JLabel();
        FechaComentLabl = new javax.swing.JLabel();
        MeGustaButton = new javax.swing.JButton();
        NoMeGustaButton = new javax.swing.JButton();
        ScrollerListVid1 = new javax.swing.JScrollPane();
        ListaVideos = new javax.swing.JList<>();
        jLabel3 = new javax.swing.JLabel();
        usuarioValora = new javax.swing.JComboBox<>();
        ScrollerListVid2 = new javax.swing.JScrollPane();
        ListaNoMeGusta = new javax.swing.JList<>();
        ScrollerListVid3 = new javax.swing.JScrollPane();
        ListaMeGusta = new javax.swing.JList<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        Editar = new javax.swing.JButton();
        Borrar = new javax.swing.JButton();
        usuarioValora1 = new javax.swing.JComboBox<>();
        VerUsuario = new javax.swing.JInternalFrame();
        ModifNombre = new javax.swing.JTextField();
        ModifApellido = new javax.swing.JTextField();
        ModifImagen = new javax.swing.JButton();
        ModifVideosButton = new javax.swing.JButton();
        ModifListaRepButton = new javax.swing.JButton();
        ConfirmCambios = new javax.swing.JButton();
        nickname = new javax.swing.JTextField();
        email = new javax.swing.JTextField();
        FechaVerUsuario = new com.toedter.calendar.JDateChooser();
        VidLAbel = new javax.swing.JLabel();
        Lisreplabel = new javax.swing.JLabel();
        Seguidoslab = new javax.swing.JLabel();
        seguidoreslab = new javax.swing.JLabel();
        Nickname = new javax.swing.JLabel();
        emaillabels = new javax.swing.JLabel();
        nomlabelss = new javax.swing.JLabel();
        Apellidolabs = new javax.swing.JLabel();
        Fechlabels = new javax.swing.JLabel();
        ScrollerUsuariosSeguidos = new javax.swing.JScrollPane();
        ListaSeguidos = new javax.swing.JList<>();
        ScrollerSeguidores = new javax.swing.JScrollPane();
        ListaSeguidores = new javax.swing.JList<>();
        ScrollerListVid = new javax.swing.JScrollPane();
        ListVideos = new javax.swing.JList<>();
        ScrollerListRep = new javax.swing.JScrollPane();
        ListasReprod = new javax.swing.JList<>();
        PanelImagen = new javax.swing.JLabel();
        Contrasenia = new javax.swing.JLabel();
        contrasenia = new javax.swing.JTextField();
        ModifCanal = new javax.swing.JTextField();
        Apellidolabs1 = new javax.swing.JLabel();
        DirImagen = new javax.swing.JTextField();
        BotonPrivado1 = new javax.swing.JCheckBox();
        ModifDescripcion = new javax.swing.JTextField();
        Apellidolabs2 = new javax.swing.JLabel();
        OperacionesSobreUsuarios = new javax.swing.JInternalFrame();
        ConsultaModifDatos = new javax.swing.JButton();
        SeguirBoton = new javax.swing.JButton();
        ModifVideosUsuarioButton = new javax.swing.JButton();
        ScrollListaUsuarios = new javax.swing.JScrollPane();
        ListaUsuarios = new javax.swing.JList<>();
        DejarDeSeguirBoton = new javax.swing.JButton();
        ModificarListaUsuario = new javax.swing.JButton();
        ConsultaListaUsuario = new javax.swing.JButton();
        VerCategorias = new javax.swing.JInternalFrame();
        AgregarCategoria = new javax.swing.JTextField();
        AgragarCategoriaButton = new javax.swing.JButton();
        ListarCategoriasButtion = new javax.swing.JButton();
        CatLAbels = new javax.swing.JLabel();
        ScrollerListCategoriasPrincipal = new javax.swing.JScrollPane();
        ListaCategoriasPrincipal = new javax.swing.JList<>();
        AltaUsuario = new javax.swing.JInternalFrame();
        EntradaNick = new javax.swing.JTextField();
        EntradaNombre = new javax.swing.JTextField();
        EntradaApellido = new javax.swing.JTextField();
        EntradaCorreoEl = new javax.swing.JTextField();
        BotonPrivado = new javax.swing.JCheckBox();
        JFileCImagen = new javax.swing.JButton();
        CuadroImagen = new javax.swing.JLabel();
        EntradaNomCanal = new javax.swing.JTextField();
        EntradaDescripcionCanal = new javax.swing.JTextField();
        Registro = new javax.swing.JButton();
        Fecha = new com.toedter.calendar.JDateChooser();
        Nick = new javax.swing.JLabel();
        Nom = new javax.swing.JLabel();
        Apellido = new javax.swing.JLabel();
        Correo = new javax.swing.JLabel();
        Fech = new javax.swing.JLabel();
        NomCanal = new javax.swing.JLabel();
        Desc = new javax.swing.JLabel();
        EntradaContrasenia = new javax.swing.JTextField();
        Contra = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        verLista = new javax.swing.JInternalFrame();
        CategoriaListaRep = new javax.swing.JComboBox<>();
        Privacidad = new javax.swing.JCheckBox();
        ListaRepLabel = new javax.swing.JLabel();
        MostrarNombre = new javax.swing.JTextField();
        MostrarTipo = new javax.swing.JTextField();
        NombreLabelInfo = new javax.swing.JLabel();
        TipoLabelInfo = new javax.swing.JLabel();
        confirmarCambiosLista = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        lu = new javax.swing.JList<>();
        ListaRepLabel1 = new javax.swing.JLabel();
        listasConsultarLista = new javax.swing.JList<>();
        AltaVideo = new javax.swing.JInternalFrame();
        AltaVideoButton = new javax.swing.JButton();
        EntradaNomVid = new javax.swing.JTextField();
        EntradaURLVid = new javax.swing.JTextField();
        UsuarioComboBox1 = new javax.swing.JComboBox<>();
        CategoriaComboBox = new javax.swing.JComboBox<>();
        ScrollerDescVid = new javax.swing.JScrollPane();
        DescVideo = new javax.swing.JTextArea();
        PrivacidadCheckbox = new javax.swing.JCheckBox();
        DuracionVideo = new javax.swing.JTextField();
        jDateChooserAltaVideo = new com.toedter.calendar.JDateChooser();
        Usu = new javax.swing.JLabel();
        Nombr = new javax.swing.JLabel();
        Descrip = new javax.swing.JLabel();
        Duracion = new javax.swing.JLabel();
        Url = new javax.swing.JLabel();
        Fechalab = new javax.swing.JLabel();
        CatLAb = new javax.swing.JLabel();
        OpcionesCategoria = new javax.swing.JInternalFrame();
        ScrollUsuVid = new javax.swing.JScrollPane();
        NombreUsuarioVideo = new javax.swing.JList<>();
        ScrollUsuLista = new javax.swing.JScrollPane();
        NombreUsuarioListaRep = new javax.swing.JList<>();
        nomCategoria = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        QuitarVideoDeLista = new javax.swing.JInternalFrame();
        UsuQuitarVideo = new javax.swing.JComboBox<>();
        BotonQuitarVideo = new javax.swing.JToggleButton();
        UsuarioListaLabel1 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ListasQuitar = new javax.swing.JList<>();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        VideosQuitar = new javax.swing.JList<>();
        Label5 = new javax.swing.JLabel();
        AgregarVideoALista = new javax.swing.JInternalFrame();
        UsuAgregarVideo1 = new javax.swing.JComboBox<>();
        UsuAgregarLista1 = new javax.swing.JComboBox<>();
        BotonAgregarALista1 = new javax.swing.JToggleButton();
        Label4 = new javax.swing.JLabel();
        UsuarioListaLabel2 = new javax.swing.JLabel();
        VideosListaLabel2 = new javax.swing.JLabel();
        ListaRepListLabel2 = new javax.swing.JLabel();
        UsuarioListaLAbel2 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        VideosAgregar1 = new javax.swing.JList<>();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        ListasAgregar1 = new javax.swing.JList<>();
        jLabel14 = new javax.swing.JLabel();
        BarraMenuSistema = new javax.swing.JMenuBar();
        Menu1Usuarios = new javax.swing.JMenu();
        M1IAltaUsuario = new javax.swing.JMenuItem();
        M1IOperacionesUsuarios = new javax.swing.JMenuItem();
        M1ISeguirUsuario = new javax.swing.JMenuItem();
        Menu2Videos = new javax.swing.JMenu();
        M2IAltaVid = new javax.swing.JMenuItem();
        M2IOperacionesVideo = new javax.swing.JMenuItem();
        Menu3Listas = new javax.swing.JMenu();
        M3ICrearListRep = new javax.swing.JMenuItem();
        M3IOperacionesListaRep = new javax.swing.JMenuItem();
        M3IAgregarVideo = new javax.swing.JMenuItem();
        M3IQuitarVideo = new javax.swing.JMenuItem();
        M3IConsulta = new javax.swing.JMenuItem();
        Menu4Categorias = new javax.swing.JMenu();
        M4IAltaCat = new javax.swing.JMenuItem();
        M4IListarCat = new javax.swing.JMenuItem();
        M4IConsultarCategoria = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Menu Trabajo");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        ConsultaLista.setClosable(true);
        ConsultaLista.setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        ConsultaLista.setTitle("Consulta lista");
        ConsultaLista.setAlignmentX(0.0F);
        ConsultaLista.setAlignmentY(0.0F);
        ConsultaLista.setVisible(false);

        ListaVideosModel.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Lista videos" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        ListaVideosModel.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                ListaVideosModelValueChanged(evt);
            }
        });
        ScrollerListRep1.setViewportView(ListaVideosModel);

        Privacidad1.setText("Privacidad");

        NombreLabelInfo1.setText("Nombre");

        Tipo.setText("Tipo");

        ListaDeListasRep1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "List Reproduccion" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        ListaDeListasRep1.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                ListaDeListasRep1ValueChanged(evt);
            }
        });
        ScrollerListRep2.setViewportView(ListaDeListasRep1);

        ConsultarVideo.setText("Consultar video");
        ConsultarVideo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConsultarVideoActionPerformed(evt);
            }
        });

        jLabel12.setText("Seleccionar Lista de Reproduccion:");

        jLabel13.setText("Categoria");

        MostrarCatLista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MostrarCatListaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ConsultaListaLayout = new javax.swing.GroupLayout(ConsultaLista.getContentPane());
        ConsultaLista.getContentPane().setLayout(ConsultaListaLayout);
        ConsultaListaLayout.setHorizontalGroup(
            ConsultaListaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ConsultaListaLayout.createSequentialGroup()
                .addGroup(ConsultaListaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ConsultaListaLayout.createSequentialGroup()
                        .addGap(194, 194, 194)
                        .addGroup(ConsultaListaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(ConsultaListaLayout.createSequentialGroup()
                                .addComponent(Privacidad1)
                                .addGap(8, 8, 8))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, ConsultaListaLayout.createSequentialGroup()
                                .addComponent(jLabel13)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(MostrarCatLista, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, ConsultaListaLayout.createSequentialGroup()
                                .addGroup(ConsultaListaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(NombreLabelInfo1)
                                    .addComponent(Tipo))
                                .addGap(18, 18, 18)
                                .addGroup(ConsultaListaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(MostrarTipo1)
                                    .addComponent(MostrarNombre1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                        .addComponent(ScrollerListRep1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(ConsultaListaLayout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ConsultaListaLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ConsultarVideo)))
                .addGap(33, 33, 33))
            .addGroup(ConsultaListaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(ConsultaListaLayout.createSequentialGroup()
                    .addGap(20, 20, 20)
                    .addComponent(ScrollerListRep2, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(394, Short.MAX_VALUE)))
        );
        ConsultaListaLayout.setVerticalGroup(
            ConsultaListaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ConsultaListaLayout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(ConsultaListaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ConsultaListaLayout.createSequentialGroup()
                        .addGroup(ConsultaListaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(NombreLabelInfo1)
                            .addComponent(MostrarNombre1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(ConsultaListaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(MostrarTipo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Tipo))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(ConsultaListaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(MostrarCatLista, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(19, 19, 19)
                        .addComponent(Privacidad1))
                    .addComponent(ScrollerListRep1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(ConsultarVideo)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(ConsultaListaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(ConsultaListaLayout.createSequentialGroup()
                    .addGap(36, 36, 36)
                    .addComponent(ScrollerListRep2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(54, Short.MAX_VALUE)))
        );

        getContentPane().add(ConsultaLista, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 110, 540, 250));

        CrearLista.setClosable(true);
        CrearLista.setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        CrearLista.setMaximizable(true);
        CrearLista.setResizable(true);
        CrearLista.setTitle("Crear Lista de Reproduccion");
        CrearLista.setNormalBounds(new java.awt.Rectangle(0, 0, 0, 0));
        CrearLista.setVerifyInputWhenFocusTarget(false);
        CrearLista.setVisible(false);

        PrivacidadCheck.setText("Privado");

        ConfirmarListPriv.setText("Crear");
        ConfirmarListPriv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConfirmarListPrivActionPerformed(evt);
            }
        });

        UsuarioComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Usuario" }));
        UsuarioComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UsuarioComboBoxActionPerformed(evt);
            }
        });

        porDefecto.setText("Por Defecto");

        ComboBoxCategoria.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Categoria" }));
        ComboBoxCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboBoxCategoriaActionPerformed(evt);
            }
        });

        Nombreliostlabel.setText("Nombre Lista");

        javax.swing.GroupLayout CrearListaLayout = new javax.swing.GroupLayout(CrearLista.getContentPane());
        CrearLista.getContentPane().setLayout(CrearListaLayout);
        CrearListaLayout.setHorizontalGroup(
            CrearListaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CrearListaLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(UsuarioComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(CrearListaLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(Nombreliostlabel)
                .addGap(8, 8, 8)
                .addComponent(NomListaRep, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(CrearListaLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(porDefecto))
            .addGroup(CrearListaLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(PrivacidadCheck, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(CrearListaLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(ComboBoxCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(CrearListaLayout.createSequentialGroup()
                .addGap(230, 230, 230)
                .addComponent(ConfirmarListPriv))
        );
        CrearListaLayout.setVerticalGroup(
            CrearListaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CrearListaLayout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(UsuarioComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addGroup(CrearListaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Nombreliostlabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(CrearListaLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(NomListaRep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(12, 12, 12)
                .addComponent(porDefecto)
                .addGap(3, 3, 3)
                .addComponent(PrivacidadCheck)
                .addGap(7, 7, 7)
                .addComponent(ComboBoxCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48)
                .addComponent(ConfirmarListPriv))
        );

        getContentPane().add(CrearLista, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 80, 340, 270));

        SeguirUsuario.setClosable(true);
        SeguirUsuario.setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        SeguirUsuario.setIconifiable(true);
        SeguirUsuario.setMaximizable(true);
        SeguirUsuario.setResizable(true);
        SeguirUsuario.setTitle("Seguir Usuario");
        SeguirUsuario.setAutoscrolls(true);
        SeguirUsuario.setVisible(false);

        SeguirButton.setText("Seguir");
        SeguirButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SeguirButtonActionPerformed(evt);
            }
        });

        ASeguir.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Usuario" }));
        ASeguir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ASeguirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout SeguirUsuarioLayout = new javax.swing.GroupLayout(SeguirUsuario.getContentPane());
        SeguirUsuario.getContentPane().setLayout(SeguirUsuarioLayout);
        SeguirUsuarioLayout.setHorizontalGroup(
            SeguirUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SeguirUsuarioLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(ASeguir, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(SeguirButton)
                .addContainerGap(34, Short.MAX_VALUE))
        );
        SeguirUsuarioLayout.setVerticalGroup(
            SeguirUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SeguirUsuarioLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(SeguirUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SeguirButton)
                    .addComponent(ASeguir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(SeguirUsuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 110, 270, 170));

        DejarSeguir.setClosable(true);
        DejarSeguir.setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        DejarSeguir.setIconifiable(true);
        DejarSeguir.setMaximizable(true);
        DejarSeguir.setResizable(true);
        DejarSeguir.setTitle("Dejar de Seguir Usuario");
        DejarSeguir.setVisible(false);

        SeguirButton1.setText("Dejar de Seguir");
        SeguirButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SeguirButton1ActionPerformed(evt);
            }
        });

        ListarQuitar.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Usuario" }));
        ListarQuitar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ListarQuitarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout DejarSeguirLayout = new javax.swing.GroupLayout(DejarSeguir.getContentPane());
        DejarSeguir.getContentPane().setLayout(DejarSeguirLayout);
        DejarSeguirLayout.setHorizontalGroup(
            DejarSeguirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DejarSeguirLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(ListarQuitar, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(SeguirButton1)
                .addContainerGap(16, Short.MAX_VALUE))
        );
        DejarSeguirLayout.setVerticalGroup(
            DejarSeguirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DejarSeguirLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(DejarSeguirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ListarQuitar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SeguirButton1))
                .addGap(61, 61, 61))
        );

        getContentPane().add(DejarSeguir, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 120, 270, 150));

        VerVideo.setClosable(true);
        VerVideo.setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        VerVideo.setIconifiable(true);
        VerVideo.setMaximizable(true);
        VerVideo.setResizable(true);
        VerVideo.setTitle("Ver Video");
        VerVideo.setMinimumSize(new java.awt.Dimension(710, 480));
        VerVideo.setNormalBounds(new java.awt.Rectangle(0, 0, 0, 0));
        VerVideo.setPreferredSize(new java.awt.Dimension(710, 480));
        VerVideo.setVisible(false);
        VerVideo.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Comentarios.setSelectionModel(null);
        Scrollercomments.setViewportView(Comentarios);

        VerVideo.getContentPane().add(Scrollercomments, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 6, 254, 185));

        PrivadoCheck.setText("Privacidad");
        PrivadoCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PrivadoCheckActionPerformed(evt);
            }
        });
        VerVideo.getContentPane().add(PrivadoCheck, new org.netbeans.lib.awtextra.AbsoluteConstraints(202, 171, -1, -1));

        CambioNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CambioNombreActionPerformed(evt);
            }
        });
        VerVideo.getContentPane().add(CambioNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(202, 6, 122, -1));
        VerVideo.getContentPane().add(CambioDuracion, new org.netbeans.lib.awtextra.AbsoluteConstraints(202, 56, 122, -1));

        CambioUrrl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CambioUrrlActionPerformed(evt);
            }
        });
        VerVideo.getContentPane().add(CambioUrrl, new org.netbeans.lib.awtextra.AbsoluteConstraints(202, 30, 122, -1));

        CambioDescrip.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CambioDescripActionPerformed(evt);
            }
        });
        VerVideo.getContentPane().add(CambioDescrip, new org.netbeans.lib.awtextra.AbsoluteConstraints(202, 87, 122, -1));

        ComentarVideoButton.setText("Comentar");
        ComentarVideoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComentarVideoButtonActionPerformed(evt);
            }
        });
        VerVideo.getContentPane().add(ComentarVideoButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 463, 101, -1));

        CambioCategorias.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Categoria" }));
        CambioCategorias.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CambioCategoriasActionPerformed(evt);
            }
        });
        VerVideo.getContentPane().add(CambioCategorias, new org.netbeans.lib.awtextra.AbsoluteConstraints(202, 144, 122, -1));

        confirmarCambiosVideo.setText("Confirmar Cambios");
        confirmarCambiosVideo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmarCambiosVideoActionPerformed(evt);
            }
        });
        VerVideo.getContentPane().add(confirmarCambiosVideo, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 516, -1, -1));
        VerVideo.getContentPane().add(cambioFecha, new org.netbeans.lib.awtextra.AbsoluteConstraints(202, 118, 122, -1));

        Nombrelabl.setText("Nombre");
        VerVideo.getContentPane().add(Nombrelabl, new org.netbeans.lib.awtextra.AbsoluteConstraints(154, 9, -1, -1));

        URLLAbl.setText("URL");
        VerVideo.getContentPane().add(URLLAbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(154, 33, -1, -1));

        DuracionLabl.setText("Duracion");
        VerVideo.getContentPane().add(DuracionLabl, new org.netbeans.lib.awtextra.AbsoluteConstraints(149, 59, -1, -1));

        DescLabl.setText("Desripcion");
        VerVideo.getContentPane().add(DescLabl, new org.netbeans.lib.awtextra.AbsoluteConstraints(149, 90, -1, -1));

        Fechalabl.setText("Fecha");
        VerVideo.getContentPane().add(Fechalabl, new org.netbeans.lib.awtextra.AbsoluteConstraints(149, 121, -1, -1));
        VerVideo.getContentPane().add(FechaComentValor, new org.netbeans.lib.awtextra.AbsoluteConstraints(467, 353, 200, -1));

        ComentarioComent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComentarioComentActionPerformed(evt);
            }
        });
        VerVideo.getContentPane().add(ComentarioComent, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 379, 254, 78));

        ComentLabl.setText("Comentario");
        VerVideo.getContentPane().add(ComentLabl, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 322, -1, -1));

        NickNameLabl.setText("Usuario");
        VerVideo.getContentPane().add(NickNameLabl, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 230, -1, 20));

        FechaComentLabl.setText("Fecha");
        VerVideo.getContentPane().add(FechaComentLabl, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 353, 37, 20));

        MeGustaButton.setText("Me Gusta");
        MeGustaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MeGustaButtonActionPerformed(evt);
            }
        });
        VerVideo.getContentPane().add(MeGustaButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 272, 103, -1));

        NoMeGustaButton.setText("No Me Gusta");
        NoMeGustaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NoMeGustaButtonActionPerformed(evt);
            }
        });
        VerVideo.getContentPane().add(NoMeGustaButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 270, 103, -1));

        ListaVideos.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Lista Videos", "" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        ListaVideos.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                ListaVideosValueChanged(evt);
            }
        });
        ScrollerListVid1.setViewportView(ListaVideos);

        VerVideo.getContentPane().add(ScrollerListVid1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, 110, -1));

        jLabel3.setText("Videos");
        VerVideo.getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, -1, 20));

        usuarioValora.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Usuario" }));
        usuarioValora.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usuarioValoraActionPerformed(evt);
            }
        });
        VerVideo.getContentPane().add(usuarioValora, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 230, 103, -1));

        ListaNoMeGusta.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "No Me Gusta" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        ListaNoMeGusta.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                ListaNoMeGustaValueChanged(evt);
            }
        });
        ScrollerListVid2.setViewportView(ListaNoMeGusta);

        VerVideo.getContentPane().add(ScrollerListVid2, new org.netbeans.lib.awtextra.AbsoluteConstraints(127, 263, 110, -1));

        ListaMeGusta.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Me Gusta" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        ListaMeGusta.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                ListaMeGustaValueChanged(evt);
            }
        });
        ScrollerListVid3.setViewportView(ListaMeGusta);

        VerVideo.getContentPane().add(ScrollerListVid3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 263, 110, -1));

        jLabel4.setText("No Me Gusta");
        VerVideo.getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(127, 240, -1, -1));

        jLabel5.setText("Me Gusta");
        VerVideo.getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 243, -1, -1));

        jLabel11.setText("Categoria");
        VerVideo.getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(149, 147, -1, -1));

        Editar.setText("Editar");
        Editar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditarActionPerformed(evt);
            }
        });
        VerVideo.getContentPane().add(Editar, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 460, -1, -1));

        Borrar.setText("Borrar");
        Borrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BorrarActionPerformed(evt);
            }
        });
        VerVideo.getContentPane().add(Borrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 460, -1, -1));

        usuarioValora1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Usuario" }));
        usuarioValora1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                usuarioValora1ItemStateChanged(evt);
            }
        });
        usuarioValora1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usuarioValora1ActionPerformed(evt);
            }
        });
        VerVideo.getContentPane().add(usuarioValora1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 103, -1));

        getContentPane().add(VerVideo, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 700, 580));

        VerUsuario.setClosable(true);
        VerUsuario.setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        VerUsuario.setIconifiable(true);
        VerUsuario.setMaximizable(true);
        VerUsuario.setResizable(true);
        VerUsuario.setTitle("Ver Usuario");
        VerUsuario.setMaximumSize(new java.awt.Dimension(1000, 600));
        VerUsuario.setNormalBounds(new java.awt.Rectangle(0, 0, 0, 0));
        VerUsuario.setVisible(false);
        VerUsuario.addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
                VerUsuarioInternalFrameClosing(evt);
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        ModifNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ModifNombreActionPerformed(evt);
            }
        });

        ModifApellido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ModifApellidoActionPerformed(evt);
            }
        });

        ModifImagen.setText("Imagen");
        ModifImagen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ModifImagenActionPerformed(evt);
            }
        });

        ModifVideosButton.setText("Modificar Video");
        ModifVideosButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ModifVideosButtonActionPerformed(evt);
            }
        });

        ModifListaRepButton.setText("Modificar Lista");
        ModifListaRepButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ModifListaRepButtonActionPerformed(evt);
            }
        });

        ConfirmCambios.setText("Confirmar Cambios");
        ConfirmCambios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConfirmCambiosActionPerformed(evt);
            }
        });

        VidLAbel.setText("Videos");

        Lisreplabel.setText("Listas de Rep");

        Seguidoslab.setText("Seguidos");

        seguidoreslab.setText("Seguidores");

        Nickname.setText("Nickname");

        emaillabels.setText("email");

        nomlabelss.setText("Nombre");

        Apellidolabs.setText("Apellido");

        Fechlabels.setText("Fecha");

        ListaSeguidos.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Usuarios Seguidos" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        ScrollerUsuariosSeguidos.setViewportView(ListaSeguidos);

        ListaSeguidores.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Seguidores" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        ListaSeguidores.setToolTipText("");
        ScrollerSeguidores.setViewportView(ListaSeguidores);

        ListVideos.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Lista Videos", " " };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        ListVideos.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                ListVideosValueChanged(evt);
            }
        });
        ScrollerListVid.setViewportView(ListVideos);

        ListasReprod.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "List Reproduccion" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        ListasReprod.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                ListasReprodValueChanged(evt);
            }
        });
        ScrollerListRep.setViewportView(ListasReprod);

        PanelImagen.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        PanelImagen.setText("<Imagen>");

        Contrasenia.setText("Contrasenia");

        ModifCanal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ModifCanalActionPerformed(evt);
            }
        });

        Apellidolabs1.setText("Canal");

        DirImagen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DirImagenActionPerformed(evt);
            }
        });

        BotonPrivado1.setText("Privado");
        BotonPrivado1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonPrivado1ActionPerformed(evt);
            }
        });

        ModifDescripcion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ModifDescripcionActionPerformed(evt);
            }
        });

        Apellidolabs2.setText("Descripción");

        javax.swing.GroupLayout VerUsuarioLayout = new javax.swing.GroupLayout(VerUsuario.getContentPane());
        VerUsuario.getContentPane().setLayout(VerUsuarioLayout);
        VerUsuarioLayout.setHorizontalGroup(
            VerUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(VerUsuarioLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(VerUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(VerUsuarioLayout.createSequentialGroup()
                        .addGroup(VerUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(VerUsuarioLayout.createSequentialGroup()
                                .addGroup(VerUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(VidLAbel)
                                    .addGroup(VerUsuarioLayout.createSequentialGroup()
                                        .addGap(4, 4, 4)
                                        .addComponent(ModifVideosButton, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(ModifListaRepButton, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(ConfirmCambios, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 105, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, VerUsuarioLayout.createSequentialGroup()
                                .addComponent(ScrollerListVid)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(VerUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ScrollerListRep, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Lisreplabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(VerUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ScrollerUsuariosSeguidos, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Seguidoslab))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(VerUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(seguidoreslab)
                                    .addComponent(ScrollerSeguidores, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, VerUsuarioLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(PanelImagen, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(58, 58, 58)))
                        .addContainerGap())
                    .addGroup(VerUsuarioLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(VerUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(VerUsuarioLayout.createSequentialGroup()
                                .addComponent(BotonPrivado1)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(VerUsuarioLayout.createSequentialGroup()
                                .addGroup(VerUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(VerUsuarioLayout.createSequentialGroup()
                                        .addComponent(Fechlabels)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(FechaVerUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(VerUsuarioLayout.createSequentialGroup()
                                        .addComponent(emaillabels)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(VerUsuarioLayout.createSequentialGroup()
                                        .addComponent(Nickname)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(nickname, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(VerUsuarioLayout.createSequentialGroup()
                                        .addComponent(nomlabelss)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(ModifNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(VerUsuarioLayout.createSequentialGroup()
                                        .addComponent(Apellidolabs)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(ModifApellido, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(VerUsuarioLayout.createSequentialGroup()
                                        .addComponent(Contrasenia)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                                        .addComponent(contrasenia, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, VerUsuarioLayout.createSequentialGroup()
                                        .addComponent(Apellidolabs1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(ModifCanal, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, VerUsuarioLayout.createSequentialGroup()
                                        .addComponent(Apellidolabs2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(ModifDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 117, Short.MAX_VALUE)
                                .addGroup(VerUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ModifImagen)
                                    .addComponent(DirImagen, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(84, 84, 84))))))
        );
        VerUsuarioLayout.setVerticalGroup(
            VerUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(VerUsuarioLayout.createSequentialGroup()
                .addGroup(VerUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(VerUsuarioLayout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(VerUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(nickname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Nickname))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(VerUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(contrasenia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Contrasenia))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(VerUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(emaillabels))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(VerUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ModifNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nomlabelss))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(VerUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ModifApellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Apellidolabs))
                        .addGroup(VerUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(VerUsuarioLayout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(Fechlabels))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, VerUsuarioLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(FechaVerUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(8, 8, 8)))
                        .addGroup(VerUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ModifCanal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Apellidolabs1))
                        .addGap(1, 1, 1))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, VerUsuarioLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(PanelImagen, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ModifImagen)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(DirImagen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(VerUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ModifDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Apellidolabs2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(BotonPrivado1)
                .addGap(13, 13, 13)
                .addGroup(VerUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(VidLAbel)
                    .addComponent(Lisreplabel)
                    .addComponent(Seguidoslab)
                    .addComponent(seguidoreslab))
                .addGap(6, 6, 6)
                .addGroup(VerUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ScrollerListVid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ScrollerListRep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ScrollerUsuariosSeguidos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ScrollerSeguidores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(VerUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ConfirmCambios)
                    .addComponent(ModifListaRepButton)
                    .addComponent(ModifVideosButton))
                .addGap(83, 83, 83))
        );

        getContentPane().add(VerUsuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 20, 520, 560));

        OperacionesSobreUsuarios.setClosable(true);
        OperacionesSobreUsuarios.setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        OperacionesSobreUsuarios.setIconifiable(true);
        OperacionesSobreUsuarios.setMaximizable(true);
        OperacionesSobreUsuarios.setResizable(true);
        OperacionesSobreUsuarios.setTitle("Operaciones Sobre Usuarios");
        OperacionesSobreUsuarios.setMaximumSize(new java.awt.Dimension(205, 410));
        OperacionesSobreUsuarios.setMinimumSize(new java.awt.Dimension(205, 410));
        OperacionesSobreUsuarios.setNormalBounds(new java.awt.Rectangle(0, 0, 0, 0));
        OperacionesSobreUsuarios.setPreferredSize(new java.awt.Dimension(205, 410));
        OperacionesSobreUsuarios.setVisible(false);

        ConsultaModifDatos.setText("Consultar / Modificar Datos");
        ConsultaModifDatos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConsultaModifDatosActionPerformed(evt);
            }
        });

        SeguirBoton.setText("Seguir Usuario");
        SeguirBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SeguirBotonActionPerformed(evt);
            }
        });

        ModifVideosUsuarioButton.setText("Consultar / Modificar Video");
        ModifVideosUsuarioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ModifVideosUsuarioButtonActionPerformed(evt);
            }
        });

        ListaUsuarios.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Usuarios Aqui" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        ListaUsuarios.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                ListaUsuariosValueChanged(evt);
            }
        });
        ScrollListaUsuarios.setViewportView(ListaUsuarios);

        DejarDeSeguirBoton.setText("Dejar de Seguir");
        DejarDeSeguirBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DejarDeSeguirBotonActionPerformed(evt);
            }
        });

        ModificarListaUsuario.setText("Modificar Lista");
        ModificarListaUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ModificarListaUsuarioActionPerformed(evt);
            }
        });

        ConsultaListaUsuario.setText("Consultar Lista");
        ConsultaListaUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConsultaListaUsuarioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout OperacionesSobreUsuariosLayout = new javax.swing.GroupLayout(OperacionesSobreUsuarios.getContentPane());
        OperacionesSobreUsuarios.getContentPane().setLayout(OperacionesSobreUsuariosLayout);
        OperacionesSobreUsuariosLayout.setHorizontalGroup(
            OperacionesSobreUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(OperacionesSobreUsuariosLayout.createSequentialGroup()
                .addGroup(OperacionesSobreUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ScrollListaUsuarios)
                    .addGroup(OperacionesSobreUsuariosLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(OperacionesSobreUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(OperacionesSobreUsuariosLayout.createSequentialGroup()
                                .addGroup(OperacionesSobreUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(ModifVideosUsuarioButton, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
                                    .addComponent(ConsultaListaUsuario, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addComponent(ModificarListaUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(OperacionesSobreUsuariosLayout.createSequentialGroup()
                                .addGroup(OperacionesSobreUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(DejarDeSeguirBoton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, OperacionesSobreUsuariosLayout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(ConsultaModifDatos, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addComponent(SeguirBoton, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        OperacionesSobreUsuariosLayout.setVerticalGroup(
            OperacionesSobreUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(OperacionesSobreUsuariosLayout.createSequentialGroup()
                .addComponent(ScrollListaUsuarios, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(ConsultaModifDatos)
                .addGap(35, 35, 35)
                .addGroup(OperacionesSobreUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DejarDeSeguirBoton)
                    .addComponent(SeguirBoton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ModifVideosUsuarioButton)
                .addGap(40, 40, 40)
                .addGroup(OperacionesSobreUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ConsultaListaUsuario)
                    .addComponent(ModificarListaUsuario))
                .addGap(47, 47, 47))
        );

        getContentPane().add(OperacionesSobreUsuarios, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 40, 530, 440));

        VerCategorias.setClosable(true);
        VerCategorias.setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        VerCategorias.setIconifiable(true);
        VerCategorias.setMaximizable(true);
        VerCategorias.setResizable(true);
        VerCategorias.setTitle("Categorias");
        VerCategorias.setToolTipText("");
        VerCategorias.setMaximumSize(new java.awt.Dimension(345, 500));
        VerCategorias.setMinimumSize(new java.awt.Dimension(228, 345));
        VerCategorias.setNormalBounds(new java.awt.Rectangle(0, 0, 0, 0));
        VerCategorias.setPreferredSize(new java.awt.Dimension(340, 345));
        VerCategorias.setVisible(false);

        AgregarCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AgregarCategoriaActionPerformed(evt);
            }
        });

        AgragarCategoriaButton.setText("Agregar");
        AgragarCategoriaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AgragarCategoriaButtonActionPerformed(evt);
            }
        });

        ListarCategoriasButtion.setText("Consultar Categoría");
        ListarCategoriasButtion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ListarCategoriasButtionActionPerformed(evt);
            }
        });

        CatLAbels.setText("Categorías");

        ListaCategoriasPrincipal.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Categorias" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        ScrollerListCategoriasPrincipal.setViewportView(ListaCategoriasPrincipal);

        javax.swing.GroupLayout VerCategoriasLayout = new javax.swing.GroupLayout(VerCategorias.getContentPane());
        VerCategorias.getContentPane().setLayout(VerCategoriasLayout);
        VerCategoriasLayout.setHorizontalGroup(
            VerCategoriasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(VerCategoriasLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(VerCategoriasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(VerCategoriasLayout.createSequentialGroup()
                        .addComponent(AgregarCategoria)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(AgragarCategoriaButton))
                    .addGroup(VerCategoriasLayout.createSequentialGroup()
                        .addGroup(VerCategoriasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(VerCategoriasLayout.createSequentialGroup()
                                .addComponent(ScrollerListCategoriasPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(ListarCategoriasButtion))
                            .addComponent(CatLAbels, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        VerCategoriasLayout.setVerticalGroup(
            VerCategoriasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(VerCategoriasLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(VerCategoriasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AgregarCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AgragarCategoriaButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(VerCategoriasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(VerCategoriasLayout.createSequentialGroup()
                        .addComponent(CatLAbels)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ScrollerListCategoriasPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(ListarCategoriasButtion))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(VerCategorias, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 60, 320, 240));

        AltaUsuario.setClosable(true);
        AltaUsuario.setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        AltaUsuario.setIconifiable(true);
        AltaUsuario.setMaximizable(true);
        AltaUsuario.setTitle("Crear Usuario");
        AltaUsuario.setMaximumSize(new java.awt.Dimension(250, 470));
        AltaUsuario.setMinimumSize(new java.awt.Dimension(250, 470));
        AltaUsuario.setPreferredSize(new java.awt.Dimension(250, 470));
        AltaUsuario.setRequestFocusEnabled(false);
        AltaUsuario.setVisible(false);
        AltaUsuario.addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
                AltaUsuarioInternalFrameClosing(evt);
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });
        AltaUsuario.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        EntradaNick.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EntradaNickActionPerformed(evt);
            }
        });
        AltaUsuario.getContentPane().add(EntradaNick, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 10, 230, -1));

        EntradaNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EntradaNombreActionPerformed(evt);
            }
        });
        AltaUsuario.getContentPane().add(EntradaNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 70, 230, -1));

        EntradaApellido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EntradaApellidoActionPerformed(evt);
            }
        });
        AltaUsuario.getContentPane().add(EntradaApellido, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 100, 230, -1));

        EntradaCorreoEl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EntradaCorreoElActionPerformed(evt);
            }
        });
        AltaUsuario.getContentPane().add(EntradaCorreoEl, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 130, 230, -1));

        BotonPrivado.setText("Privado");
        BotonPrivado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonPrivadoActionPerformed(evt);
            }
        });
        AltaUsuario.getContentPane().add(BotonPrivado, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 258, 77, -1));

        JFileCImagen.setText("Imagen");
        JFileCImagen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JFileCImagenActionPerformed(evt);
            }
        });
        AltaUsuario.getContentPane().add(JFileCImagen, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 110, -1, -1));

        CuadroImagen.setBackground(new java.awt.Color(102, 102, 102));
        CuadroImagen.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        AltaUsuario.getContentPane().add(CuadroImagen, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 10, 145, 87));

        EntradaNomCanal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EntradaNomCanalActionPerformed(evt);
            }
        });
        AltaUsuario.getContentPane().add(EntradaNomCanal, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 220, 230, -1));

        EntradaDescripcionCanal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EntradaDescripcionCanalActionPerformed(evt);
            }
        });
        AltaUsuario.getContentPane().add(EntradaDescripcionCanal, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 311, 230, -1));

        Registro.setText("Registrar");
        Registro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegistroActionPerformed(evt);
            }
        });
        AltaUsuario.getContentPane().add(Registro, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 320, 101, -1));
        AltaUsuario.getContentPane().add(Fecha, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 160, 230, -1));

        Nick.setText("Nickname");
        AltaUsuario.getContentPane().add(Nick, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 14, -1, -1));

        Nom.setText("Nombre");
        AltaUsuario.getContentPane().add(Nom, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, -1, 20));

        Apellido.setText("Apellido");
        AltaUsuario.getContentPane().add(Apellido, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, -1, 20));

        Correo.setText("Correo");
        AltaUsuario.getContentPane().add(Correo, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, -1, 20));

        Fech.setText("Fecha");
        AltaUsuario.getContentPane().add(Fech, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, -1, 20));

        NomCanal.setText("Canal Nom");
        AltaUsuario.getContentPane().add(NomCanal, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 220, -1, 20));

        Desc.setText("Descripcion");
        AltaUsuario.getContentPane().add(Desc, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 310, -1, 20));

        EntradaContrasenia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EntradaContraseniaActionPerformed(evt);
            }
        });
        AltaUsuario.getContentPane().add(EntradaContrasenia, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 40, 230, -1));

        Contra.setText("Contraseña");
        AltaUsuario.getContentPane().add(Contra, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, -1, 20));

        jButton1.setText("Editar Canal");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        AltaUsuario.getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 193, 107, 20));

        getContentPane().add(AltaUsuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 60, 560, 380));

        verLista.setClosable(true);
        verLista.setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        verLista.setIconifiable(true);
        verLista.setMaximizable(true);
        verLista.setTitle("Modificar Lista");
        verLista.setMinimumSize(new java.awt.Dimension(580, 280));
        verLista.setPreferredSize(new java.awt.Dimension(580, 280));
        verLista.setVisible(false);
        verLista.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CategoriaListaRep.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Categoria" }));
        verLista.getContentPane().add(CategoriaListaRep, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 120, 100, -1));

        Privacidad.setText("Privacidad");
        verLista.getContentPane().add(Privacidad, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 90, -1, -1));

        ListaRepLabel.setText("Seleccionar Lista:");
        verLista.getContentPane().add(ListaRepLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 10, 106, -1));

        MostrarNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MostrarNombreActionPerformed(evt);
            }
        });
        verLista.getContentPane().add(MostrarNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 30, 100, -1));
        verLista.getContentPane().add(MostrarTipo, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 60, 100, -1));

        NombreLabelInfo.setText("Nombre");
        verLista.getContentPane().add(NombreLabelInfo, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 30, -1, -1));

        TipoLabelInfo.setText("Tipo");
        verLista.getContentPane().add(TipoLabelInfo, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 70, -1, -1));

        confirmarCambiosLista.setText("Confirmar Cambios");
        confirmarCambiosLista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmarCambiosListaActionPerformed(evt);
            }
        });
        verLista.getContentPane().add(confirmarCambiosLista, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 200, -1, -1));

        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel10.setText("Categoria");
        verLista.getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 120, 57, -1));

        lu.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lu.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { " ", " ", " ", " " };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        lu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                luMouseClicked(evt);
            }
        });
        lu.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                luValueChanged(evt);
            }
        });
        verLista.getContentPane().add(lu, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 98, 138));

        ListaRepLabel1.setText("Seleccionar Usuario:");
        verLista.getContentPane().add(ListaRepLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 11, 106, -1));

        listasConsultarLista.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        listasConsultarLista.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listasConsultarListaValueChanged(evt);
            }
        });
        verLista.getContentPane().add(listasConsultarLista, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 30, 100, 140));

        getContentPane().add(verLista, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 100, 400, 280));
        try {
            verLista.setMaximum(true);
        } catch (java.beans.PropertyVetoException e1) {
            e1.printStackTrace();
        }

        AltaVideo.setClosable(true);
        AltaVideo.setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        AltaVideo.setIconifiable(true);
        AltaVideo.setMaximizable(true);
        AltaVideo.setResizable(true);
        AltaVideo.setTitle("Alta Video");
        AltaVideo.setMaximumSize(new java.awt.Dimension(300, 500));
        AltaVideo.setMinimumSize(new java.awt.Dimension(230, 500));
        AltaVideo.setName(""); // NOI18N
        AltaVideo.setNormalBounds(new java.awt.Rectangle(0, 0, 0, 0));
        AltaVideo.setPreferredSize(new java.awt.Dimension(230, 500));
        AltaVideo.setVisible(false);
        AltaVideo.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        AltaVideoButton.setText("Crear");
        AltaVideoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AltaVideoButtonActionPerformed(evt);
            }
        });
        AltaVideo.getContentPane().add(AltaVideoButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(224, 380, -1, -1));

        EntradaNomVid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EntradaNomVidActionPerformed(evt);
            }
        });
        AltaVideo.getContentPane().add(EntradaNomVid, new org.netbeans.lib.awtextra.AbsoluteConstraints(117, 37, 166, -1));
        AltaVideo.getContentPane().add(EntradaURLVid, new org.netbeans.lib.awtextra.AbsoluteConstraints(117, 212, 166, -1));

        UsuarioComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UsuarioComboBox1ActionPerformed(evt);
            }
        });
        AltaVideo.getContentPane().add(UsuarioComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(116, 11, 166, -1));

        CategoriaComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Categoria" }));
        AltaVideo.getContentPane().add(CategoriaComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(117, 282, 166, -1));

        DescVideo.setColumns(20);
        DescVideo.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        DescVideo.setRows(5);
        ScrollerDescVid.setViewportView(DescVideo);

        AltaVideo.getContentPane().add(ScrollerDescVid, new org.netbeans.lib.awtextra.AbsoluteConstraints(117, 63, -1, -1));

        PrivacidadCheckbox.setText("Privado");
        AltaVideo.getContentPane().add(PrivacidadCheckbox, new org.netbeans.lib.awtextra.AbsoluteConstraints(222, 320, -1, -1));

        DuracionVideo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DuracionVideoActionPerformed(evt);
            }
        });
        AltaVideo.getContentPane().add(DuracionVideo, new org.netbeans.lib.awtextra.AbsoluteConstraints(117, 186, 166, -1));
        AltaVideo.getContentPane().add(jDateChooserAltaVideo, new org.netbeans.lib.awtextra.AbsoluteConstraints(117, 244, 166, -1));

        Usu.setText("Usuario");
        AltaVideo.getContentPane().add(Usu, new org.netbeans.lib.awtextra.AbsoluteConstraints(18, 14, -1, -1));

        Nombr.setText("Nombre");
        AltaVideo.getContentPane().add(Nombr, new org.netbeans.lib.awtextra.AbsoluteConstraints(18, 40, -1, -1));

        Descrip.setText("Descripcion");
        AltaVideo.getContentPane().add(Descrip, new org.netbeans.lib.awtextra.AbsoluteConstraints(18, 63, -1, -1));

        Duracion.setText("Duracion");
        AltaVideo.getContentPane().add(Duracion, new org.netbeans.lib.awtextra.AbsoluteConstraints(18, 192, 54, -1));

        Url.setText("URL");
        AltaVideo.getContentPane().add(Url, new org.netbeans.lib.awtextra.AbsoluteConstraints(18, 215, -1, -1));

        Fechalab.setText("Fecha");
        AltaVideo.getContentPane().add(Fechalab, new org.netbeans.lib.awtextra.AbsoluteConstraints(18, 250, -1, -1));

        CatLAb.setText("Categoria");
        AltaVideo.getContentPane().add(CatLAb, new org.netbeans.lib.awtextra.AbsoluteConstraints(18, 285, -1, -1));

        getContentPane().add(AltaVideo, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 10, 320, 450));

        OpcionesCategoria.setClosable(true);
        OpcionesCategoria.setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        OpcionesCategoria.setIconifiable(true);
        OpcionesCategoria.setMaximizable(true);
        OpcionesCategoria.setTitle("Consultar Categoria");
        OpcionesCategoria.setVisible(false);

        ScrollUsuVid.setViewportView(NombreUsuarioVideo);

        ScrollUsuLista.setViewportView(NombreUsuarioListaRep);

        nomCategoria.setText("Categoria");

        jLabel1.setText("Videos");

        jLabel2.setText("Listas de Reproduccion");

        javax.swing.GroupLayout OpcionesCategoriaLayout = new javax.swing.GroupLayout(OpcionesCategoria.getContentPane());
        OpcionesCategoria.getContentPane().setLayout(OpcionesCategoriaLayout);
        OpcionesCategoriaLayout.setHorizontalGroup(
            OpcionesCategoriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(OpcionesCategoriaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(OpcionesCategoriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(OpcionesCategoriaLayout.createSequentialGroup()
                        .addComponent(nomCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(OpcionesCategoriaLayout.createSequentialGroup()
                        .addGroup(OpcionesCategoriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(ScrollUsuVid, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                        .addGroup(OpcionesCategoriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(ScrollUsuLista, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27))))
        );
        OpcionesCategoriaLayout.setVerticalGroup(
            OpcionesCategoriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, OpcionesCategoriaLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(OpcionesCategoriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(OpcionesCategoriaLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ScrollUsuLista, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(OpcionesCategoriaLayout.createSequentialGroup()
                        .addComponent(nomCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ScrollUsuVid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(102, 102, 102))
        );

        getContentPane().add(OpcionesCategoria, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 110, 310, 250));

        QuitarVideoDeLista.setClosable(true);
        QuitarVideoDeLista.setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        QuitarVideoDeLista.setIconifiable(true);
        QuitarVideoDeLista.setMaximizable(true);
        QuitarVideoDeLista.setTitle("Quitar Video de Lista");
        QuitarVideoDeLista.setMinimumSize(new java.awt.Dimension(340, 450));
        QuitarVideoDeLista.setVisible(false);

        UsuQuitarVideo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                UsuQuitarVideoItemStateChanged(evt);
            }
        });
        UsuQuitarVideo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UsuQuitarVideoActionPerformed(evt);
            }
        });

        BotonQuitarVideo.setText("Quitar");
        BotonQuitarVideo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonQuitarVideoActionPerformed(evt);
            }
        });

        UsuarioListaLabel1.setText("Usuario");

        jLabel6.setText("Seleccionar video:");

        ListasQuitar.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                ListasQuitarValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(ListasQuitar);

        jLabel7.setText("Seleccionar Lista de Reproduccion:");

        jScrollPane2.setViewportView(VideosQuitar);

        Label5.setText("----------------------------------------------------------------------------------------");

        javax.swing.GroupLayout QuitarVideoDeListaLayout = new javax.swing.GroupLayout(QuitarVideoDeLista.getContentPane());
        QuitarVideoDeLista.getContentPane().setLayout(QuitarVideoDeListaLayout);
        QuitarVideoDeListaLayout.setHorizontalGroup(
            QuitarVideoDeListaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(QuitarVideoDeListaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(QuitarVideoDeListaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(QuitarVideoDeListaLayout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(BotonQuitarVideo, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(QuitarVideoDeListaLayout.createSequentialGroup()
                        .addGroup(QuitarVideoDeListaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(QuitarVideoDeListaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, QuitarVideoDeListaLayout.createSequentialGroup()
                                    .addComponent(UsuarioListaLabel1)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(UsuQuitarVideo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addComponent(Label5, javax.swing.GroupLayout.DEFAULT_SIZE, 354, Short.MAX_VALUE)
        );
        QuitarVideoDeListaLayout.setVerticalGroup(
            QuitarVideoDeListaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(QuitarVideoDeListaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(QuitarVideoDeListaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(UsuQuitarVideo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(UsuarioListaLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(Label5)
                .addGroup(QuitarVideoDeListaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(QuitarVideoDeListaLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, QuitarVideoDeListaLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(BotonQuitarVideo)
                        .addContainerGap())))
        );

        getContentPane().add(QuitarVideoDeLista, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 20, 370, 420));

        AgregarVideoALista.setClosable(true);
        AgregarVideoALista.setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        AgregarVideoALista.setIconifiable(true);
        AgregarVideoALista.setMaximizable(true);
        AgregarVideoALista.setTitle("Agregar Video a Lista");
        AgregarVideoALista.setMinimumSize(new java.awt.Dimension(340, 450));
        AgregarVideoALista.setVisible(false);

        UsuAgregarVideo1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                UsuAgregarVideo1ItemStateChanged(evt);
            }
        });
        UsuAgregarVideo1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UsuAgregarVideo1ActionPerformed(evt);
            }
        });

        UsuAgregarLista1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                UsuAgregarLista1ItemStateChanged(evt);
            }
        });
        UsuAgregarLista1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UsuAgregarLista1ActionPerformed(evt);
            }
        });

        BotonAgregarALista1.setText("Agregar");
        BotonAgregarALista1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonAgregarALista1ActionPerformed(evt);
            }
        });

        Label4.setText("-----------------------------------------------------------------------------------");

        UsuarioListaLabel2.setText("Usuario");

        VideosListaLabel2.setText("Videos");

        ListaRepListLabel2.setText("Listas");

        UsuarioListaLAbel2.setText("Usuario");

        jLabel8.setText("Seleccionar video:");

        VideosAgregar1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Video" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane3.setViewportView(VideosAgregar1);

        jLabel9.setText("Seleccionar Lista de Reproduccion:");

        ListasAgregar1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Lista" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane4.setViewportView(ListasAgregar1);

        javax.swing.GroupLayout AgregarVideoAListaLayout = new javax.swing.GroupLayout(AgregarVideoALista.getContentPane());
        AgregarVideoALista.getContentPane().setLayout(AgregarVideoAListaLayout);
        AgregarVideoAListaLayout.setHorizontalGroup(
            AgregarVideoAListaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AgregarVideoAListaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(AgregarVideoAListaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AgregarVideoAListaLayout.createSequentialGroup()
                        .addComponent(UsuAgregarLista1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(64, 64, 64))
                    .addGroup(AgregarVideoAListaLayout.createSequentialGroup()
                        .addComponent(UsuarioListaLAbel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ListaRepListLabel2)
                        .addGap(120, 120, 120))
                    .addGroup(AgregarVideoAListaLayout.createSequentialGroup()
                        .addGroup(AgregarVideoAListaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(UsuAgregarVideo1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(UsuarioListaLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(AgregarVideoAListaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(AgregarVideoAListaLayout.createSequentialGroup()
                                .addGap(23, 23, 23)
                                .addComponent(VideosListaLabel2)))
                        .addGap(64, 64, 64))
                    .addGroup(AgregarVideoAListaLayout.createSequentialGroup()
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(42, Short.MAX_VALUE))))
            .addGroup(AgregarVideoAListaLayout.createSequentialGroup()
                .addGroup(AgregarVideoAListaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Label4))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AgregarVideoAListaLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(BotonAgregarALista1, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        AgregarVideoAListaLayout.setVerticalGroup(
            AgregarVideoAListaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AgregarVideoAListaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AgregarVideoAListaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(UsuarioListaLabel2)
                    .addComponent(VideosListaLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AgregarVideoAListaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(UsuAgregarVideo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(Label4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AgregarVideoAListaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(UsuarioListaLAbel2)
                    .addComponent(ListaRepListLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AgregarVideoAListaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(UsuAgregarLista1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(BotonAgregarALista1)
                .addContainerGap())
        );

        getContentPane().add(AgregarVideoALista, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 10, 380, 440));

        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Fondos/x.jpg"))); // NOI18N
        jLabel14.setText("jLabel14");
        getContentPane().add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(-20, -10, 1600, 920));

        Menu1Usuarios.setText("Usuarios");

        M1IAltaUsuario.setText("Crear");
        M1IAltaUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                M1IAltaUsuarioActionPerformed(evt);
            }
        });
        Menu1Usuarios.add(M1IAltaUsuario);

        M1IOperacionesUsuarios.setText("Consultar/Modificar");
        M1IOperacionesUsuarios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                M1IOperacionesUsuariosActionPerformed(evt);
            }
        });
        Menu1Usuarios.add(M1IOperacionesUsuarios);

        M1ISeguirUsuario.setText("Seguir/Dejar de Seguir");
        M1ISeguirUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                M1ISeguirUsuarioActionPerformed(evt);
            }
        });
        Menu1Usuarios.add(M1ISeguirUsuario);

        BarraMenuSistema.add(Menu1Usuarios);

        Menu2Videos.setText("Videos");

        M2IAltaVid.setText("Crear");
        M2IAltaVid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                M2IAltaVidActionPerformed(evt);
            }
        });
        Menu2Videos.add(M2IAltaVid);

        M2IOperacionesVideo.setText("Consultar/Modificar");
        M2IOperacionesVideo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                M2IOperacionesVideoActionPerformed(evt);
            }
        });
        Menu2Videos.add(M2IOperacionesVideo);

        BarraMenuSistema.add(Menu2Videos);

        Menu3Listas.setText("Listas de Reproduccion");

        M3ICrearListRep.setText("Crear");
        M3ICrearListRep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                M3ICrearListRepActionPerformed(evt);
            }
        });
        Menu3Listas.add(M3ICrearListRep);

        M3IOperacionesListaRep.setText("Modificar");
        M3IOperacionesListaRep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                M3IOperacionesListaRepActionPerformed(evt);
            }
        });
        Menu3Listas.add(M3IOperacionesListaRep);

        M3IAgregarVideo.setText("Agregar Video");
        M3IAgregarVideo.setActionCommand("M3IAgregarQuitarVideo");
        M3IAgregarVideo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                M3IAgregarVideoActionPerformed(evt);
            }
        });
        Menu3Listas.add(M3IAgregarVideo);

        M3IQuitarVideo.setText("Quitar Video");
        M3IQuitarVideo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                M3IQuitarVideoActionPerformed(evt);
            }
        });
        Menu3Listas.add(M3IQuitarVideo);

        M3IConsulta.setText("Consultar");
        M3IConsulta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                M3IConsultaActionPerformed(evt);
            }
        });
        Menu3Listas.add(M3IConsulta);

        BarraMenuSistema.add(Menu3Listas);

        Menu4Categorias.setText("Categorias");

        M4IAltaCat.setText("Crear");
        M4IAltaCat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                M4IAltaCatActionPerformed(evt);
            }
        });
        Menu4Categorias.add(M4IAltaCat);

        M4IListarCat.setText("Listar");
        M4IListarCat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                M4IListarCatActionPerformed(evt);
            }
        });
        Menu4Categorias.add(M4IListarCat);

        M4IConsultarCategoria.setText("Consultar");
        M4IConsultarCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                M4IConsultarCategoriaActionPerformed(evt);
            }
        });
        Menu4Categorias.add(M4IConsultarCategoria);

        BarraMenuSistema.add(Menu4Categorias);

        setJMenuBar(BarraMenuSistema);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void M4IListarCatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_M4IListarCatActionPerformed
        AltaVideo.setVisible(false);
        AltaUsuario.setVisible(false);
        CrearLista.setVisible(false);
        VerCategorias.setVisible(false);
        VerVideo.setVisible(false);
        VerUsuario.setVisible(false);
        OperacionesSobreUsuarios.setVisible(false);
        SeguirUsuario.setVisible(false);
        DejarSeguir.setVisible(false);
        OpcionesCategoria.setVisible(true);
        verLista.setVisible(false);
        AgregarVideoALista.setVisible(false);
        QuitarVideoDeLista.setVisible(false);
        ConsultaLista.setVisible(false);
        
        DefaultListModel model = new DefaultListModel();
        for(DTCategoria c : m.getCategorias()) {
            model.addElement(c.getNombre());
        }
        ListaCategoriasPrincipal.setModel(model);
        ListarCategoriasButtion.setVisible(false);
//        centrar(VerCategorias);
    }//GEN-LAST:event_M4IListarCatActionPerformed

    private void M1IAltaUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_M1IAltaUsuarioActionPerformed
        AltaVideo.setVisible(false);
        AltaUsuario.setVisible(true);
        CrearLista.setVisible(false);
        VerCategorias.setVisible(false);
        VerVideo.setVisible(false);
        VerUsuario.setVisible(false);
        OperacionesSobreUsuarios.setVisible(false);
        SeguirUsuario.setVisible(false);
        DejarSeguir.setVisible(false);
        OpcionesCategoria.setVisible(false);
        verLista.setVisible(false);
        AgregarVideoALista.setVisible(false);
        QuitarVideoDeLista.setVisible(false);
        ConsultaLista.setVisible(false);
        
        Fecha.setDate(new Date());
        BotonPrivado.setVisible(false);
        EntradaNomCanal.setVisible(false);
        NomCanal.setVisible(false);
//        centrar(AltaUsuario);
    }//GEN-LAST:event_M1IAltaUsuarioActionPerformed

    private void M1ISeguirUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_M1ISeguirUsuarioActionPerformed
        AltaVideo.setVisible(false);
        AltaUsuario.setVisible(false);
        CrearLista.setVisible(false);
        VerCategorias.setVisible(false);
        VerVideo.setVisible(false);
        VerUsuario.setVisible(false);
        OperacionesSobreUsuarios.setVisible(true);
        SeguirUsuario.setVisible(false);
        DejarSeguir.setVisible(false);
        OpcionesCategoria.setVisible(false);
        verLista.setVisible(false);
        AgregarVideoALista.setVisible(false);
        QuitarVideoDeLista.setVisible(false);
        ConsultaLista.setVisible(false);

        DefaultListModel model = new DefaultListModel();
        for(DTUsuario u : m.getUsuarios()){
            model.addElement(u.getNickname());
        }
        ListaUsuarios.setModel(model);
        ModifVideosUsuarioButton.setVisible(false);
        ConsultaModifDatos.setVisible(false);
        SeguirBoton.setVisible(true);
        DejarDeSeguirBoton.setVisible(true);
        ModificarListaUsuario.setVisible(false);
        ConsultaListaUsuario.setVisible(false);
    }//GEN-LAST:event_M1ISeguirUsuarioActionPerformed

    private void M1IOperacionesUsuariosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_M1IOperacionesUsuariosActionPerformed
        AltaVideo.setVisible(false);
        AltaUsuario.setVisible(false);
        CrearLista.setVisible(false);
        VerCategorias.setVisible(false);
        VerVideo.setVisible(false);
        VerUsuario.setVisible(false);
        OperacionesSobreUsuarios.setVisible(true);
        SeguirUsuario.setVisible(false);
        DejarSeguir.setVisible(false);
        OpcionesCategoria.setVisible(false);
        verLista.setVisible(false);
        AgregarVideoALista.setVisible(false);
        QuitarVideoDeLista.setVisible(false);
        ConsultaLista.setVisible(false);
        
        DefaultListModel model = new DefaultListModel();
        for(DTUsuario u : m.getUsuarios()){
            model.addElement(u.getNickname());
        }
        ListaUsuarios.setModel(model);
        ModifVideosUsuarioButton.setVisible(false);
        ConsultaModifDatos.setVisible(true);
        SeguirBoton.setVisible(false);
        DejarDeSeguirBoton.setVisible(false);
        ModificarListaUsuario.setVisible(false);
        ConsultaListaUsuario.setVisible(false);
//        centrar(OperacionesSobreUsuarios);
    }//GEN-LAST:event_M1IOperacionesUsuariosActionPerformed

    private void AgregarCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AgregarCategoriaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AgregarCategoriaActionPerformed

    private void M4IAltaCatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_M4IAltaCatActionPerformed
        CatLAbels.setVisible(false);
        ListaCategoriasPrincipal.setVisible(false);
        ListarCategoriasButtion.setVisible(false);
        
        AltaVideo.setVisible(false);
        AltaUsuario.setVisible(false);
        CrearLista.setVisible(false);
        VerCategorias.setVisible(true);
        VerVideo.setVisible(false);
        VerUsuario.setVisible(false);
        OperacionesSobreUsuarios.setVisible(false);
        SeguirUsuario.setVisible(false);
        DejarSeguir.setVisible(false);
        OpcionesCategoria.setVisible(false);
        verLista.setVisible(false);
        AgregarVideoALista.setVisible(false);
        QuitarVideoDeLista.setVisible(false);
        ConsultaLista.setVisible(false);

        DefaultListModel model = new DefaultListModel();
        for(DTCategoria c : m.getCategorias()) {
            model.addElement(c.getNombre());
        }
        ListaCategoriasPrincipal.setModel(model);
//        centrar(VerCategorias);
    }//GEN-LAST:event_M4IAltaCatActionPerformed

    private void AgragarCategoriaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AgragarCategoriaButtonActionPerformed
        DTCategoria cat = new DTCategoria(AgregarCategoria.getText());
        if(!AgregarCategoria.getText().equals("")){    
            if(m.nombreCategoriaLibre(AgregarCategoria.getText())){
                s.altaCategoria(cat);
                AgregarCategoria.setText("");
                JOptionPane.showMessageDialog(this, "Categoría guardada correctamente", "Exito", JOptionPane.ERROR_MESSAGE);
                DefaultListModel model = new DefaultListModel();
                for(DTCategoria c : m.getCategorias()) {
                    model.addElement(c.getNombre());
                }
                ListaCategoriasPrincipal.setModel(model);
            }
            else{
                JOptionPane.showMessageDialog(this, "Nombre de categoría en uso", "Error", JOptionPane.ERROR_MESSAGE); 
                return;
            }
        }
        else
            JOptionPane.showMessageDialog(this, "Campos vacios", "Error", JOptionPane.INFORMATION_MESSAGE);   
    }//GEN-LAST:event_AgragarCategoriaButtonActionPerformed

    private void UsuarioComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UsuarioComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_UsuarioComboBoxActionPerformed
       
    private void M2IAltaVidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_M2IAltaVidActionPerformed
        AltaVideo.setVisible(true);
        AltaUsuario.setVisible(false);
        CrearLista.setVisible(false);
        VerCategorias.setVisible(false);
        VerVideo.setVisible(false);
        VerUsuario.setVisible(false);
        OperacionesSobreUsuarios.setVisible(false);
        SeguirUsuario.setVisible(false);
        DejarSeguir.setVisible(false);
        OpcionesCategoria.setVisible(false);
        verLista.setVisible(false);
        AgregarVideoALista.setVisible(false);
        QuitarVideoDeLista.setVisible(false);
        ConsultaLista.setVisible(false);

        UsuarioComboBox1.removeAllItems();
        CategoriaComboBox.removeAllItems();
        for (DTUsuario u : m.getUsuarios()){
            UsuarioComboBox1.addItem(u.getNickname());
        }
        for (DTCategoria c : m.getCategorias())
            CategoriaComboBox.addItem(c.getNombre());
        jDateChooserAltaVideo.setDate(new Date());
//        centrar(AltaVideo);
    }//GEN-LAST:event_M2IAltaVidActionPerformed

    private void M2IOperacionesVideoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_M2IOperacionesVideoActionPerformed
        AltaVideo.setVisible(false);
        AltaUsuario.setVisible(false);
        CrearLista.setVisible(false);
        VerCategorias.setVisible(false);
        VerVideo.setVisible(true);
        VerUsuario.setVisible(false);
        OperacionesSobreUsuarios.setVisible(false);
        SeguirUsuario.setVisible(false);
        DejarSeguir.setVisible(false);
        OpcionesCategoria.setVisible(false);
        verLista.setVisible(false);
        AgregarVideoALista.setVisible(false);
        QuitarVideoDeLista.setVisible(false);
        ConsultaLista.setVisible(false);

        //item menu consultar/modificar Video
        List<DTUsuario> Us = m.getUsuarios();
        for(int i=0; i<Us.size(); i++)
            usuarioValora1.addItem(Us.get(i).getNickname());
        
       /* DefaultListModel model = new DefaultListModel();
        for (DTUsuario u : m.getUsuarios()){
            model.addElement(u.getNickname());
        }
        ListaUsuarios.setModel(model);*/
        ConsultaModifDatos.setVisible(false);
        SeguirBoton.setVisible(false);
        DejarDeSeguirBoton.setVisible(false);
        ModifVideosUsuarioButton.setVisible(true);
        ModificarListaUsuario.setVisible(false);
        ConsultaListaUsuario.setVisible(false);
//        centrar(OperacionesSobreUsuarios);
    }//GEN-LAST:event_M2IOperacionesVideoActionPerformed
     
    
    private void M3ICrearListRepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_M3ICrearListRepActionPerformed
        AltaVideo.setVisible(false);
        AltaUsuario.setVisible(false);
        CrearLista.setVisible(true);
        VerCategorias.setVisible(false);
        VerVideo.setVisible(false);
        VerUsuario.setVisible(false);
        OperacionesSobreUsuarios.setVisible(false);
        SeguirUsuario.setVisible(false);
        DejarSeguir.setVisible(false);
        OpcionesCategoria.setVisible(false);
        verLista.setVisible(false);
        AgregarVideoALista.setVisible(false);
        QuitarVideoDeLista.setVisible(false);
        ConsultaLista.setVisible(false);

        UsuarioComboBox.removeAllItems();
        ComboBoxCategoria.removeAllItems();
        for (DTUsuario u : m.getUsuarios()){
            UsuarioComboBox.addItem(u.getNickname());
        }
        for (DTCategoria c : m.getCategorias()){
            ComboBoxCategoria.addItem(c.getNombre());
        }
//        centrar(CrearLista);
    }//GEN-LAST:event_M3ICrearListRepActionPerformed

    private void M3IOperacionesListaRepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_M3IOperacionesListaRepActionPerformed
        AltaVideo.setVisible(false);
        AltaUsuario.setVisible(false);
        CrearLista.setVisible(false);
        VerCategorias.setVisible(false);
        VerVideo.setVisible(false);
        VerUsuario.setVisible(false);
        OperacionesSobreUsuarios.setVisible(false);
        SeguirUsuario.setVisible(false);
        DejarSeguir.setVisible(false);
        OpcionesCategoria.setVisible(false);
        verLista.setVisible(true);
        AgregarVideoALista.setVisible(false);
        QuitarVideoDeLista.setVisible(false);
        ConsultaLista.setVisible(false);
        /////
        DefaultListModel model = new DefaultListModel();
        m.getUsuarios().forEach((u) -> {
            model.addElement(u.getNickname());
        });
        lu.setModel(model);
        
        ConsultaModifDatos.setVisible(false);
        SeguirBoton.setVisible(false);
        DejarDeSeguirBoton.setVisible(false);
        ModifVideosUsuarioButton.setVisible(false);
        ModificarListaUsuario.setVisible(true);
        ConsultaListaUsuario.setVisible(false);
//        centrar(OperacionesSobreUsuarios);
    }//GEN-LAST:event_M3IOperacionesListaRepActionPerformed

    private void ConfirmarListPrivActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConfirmarListPrivActionPerformed
        DTLista lista = new DTLista(NomListaRep.getText(), porDefecto.isSelected(), PrivacidadCheck.isSelected(), ComboBoxCategoria.getSelectedItem().toString());
        if(!NomListaRep.getText().equals("")){
            if(m.nombreListaLibre(NomListaRep.getText())){ 
                if (porDefecto.isSelected() == true && PrivacidadCheck.isSelected() == true)
                    JOptionPane.showMessageDialog(this, "La lista no puede ser por defecto y privada simultaneamente.", "Error", JOptionPane.INFORMATION_MESSAGE);
                else
                {
                    if (porDefecto.isSelected() == true)
                        s.altaListaPorDefecto(lista, UsuarioComboBox.getSelectedItem().toString());
                    else
                        s.altaLista(lista, UsuarioComboBox.getSelectedItem().toString());
                    
                    JOptionPane.showMessageDialog(this, "Lista creada.", "Exito", JOptionPane.INFORMATION_MESSAGE);
                    this.NomListaRep.setText("");
                }     
              
            }
            else{
                JOptionPane.showMessageDialog(this, "Nombre de lista en uso", "Error", JOptionPane.INFORMATION_MESSAGE); 
            }
        }
        else
            JOptionPane.showMessageDialog(this, "Campos vacios", "Error", JOptionPane.INFORMATION_MESSAGE);    
    }//GEN-LAST:event_ConfirmarListPrivActionPerformed

    private void UsuarioComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UsuarioComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_UsuarioComboBox1ActionPerformed

    private void AltaVideoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AltaVideoButtonActionPerformed
        String duracion;
        boolean priv;
        if (DuracionVideo.getText() == null)
            duracion = "0";
        else
            duracion = DuracionVideo.getText();
        if (PrivacidadCheckbox.isSelected() == true)
            priv = true;
        else
            priv = false;
            
        if (EntradaNomVid.getText().isEmpty() || EntradaNomVid.getText() == null ||
                EntradaURLVid.getText().isEmpty() || EntradaURLVid.getText() == null ||
                CategoriaComboBox.getSelectedItem().toString().isEmpty() || CategoriaComboBox.getSelectedItem().toString() == null)
            JOptionPane.showMessageDialog(this, "Campos vacios", "Error", JOptionPane.ERROR_MESSAGE);
            else{
            DTVideo video = new DTVideo (EntradaNomVid.getText(), DescVideo.getText(), duracion, jDateChooserAltaVideo.getDate() , 
                    EntradaURLVid.getText(), priv, CategoriaComboBox.getSelectedItem().toString());
            s.altaVideo(video, UsuarioComboBox1.getSelectedItem().toString());
            JOptionPane.showMessageDialog(this, "Video creado.", "Exito", JOptionPane.INFORMATION_MESSAGE);
            EntradaNomVid.setText("");
            DescVideo.setText("");
            DuracionVideo.setText("");
            jDateChooserAltaVideo.setDate(new Date());
            EntradaURLVid.setText("");
            PrivacidadCheckbox.setSelected(false);
            CategoriaComboBox.setSelectedIndex(0);
        }
    }//GEN-LAST:event_AltaVideoButtonActionPerformed

    private void ModifNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ModifNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ModifNombreActionPerformed

    private void ConsultaModifDatosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConsultaModifDatosActionPerformed
        AltaVideo.setVisible(false);
        AltaUsuario.setVisible(false);
        CrearLista.setVisible(false);
        VerCategorias.setVisible(false);
        VerVideo.setVisible(false);
        VerUsuario.setVisible(true);
        OperacionesSobreUsuarios.setVisible(false);
        SeguirUsuario.setVisible(false);
        DejarSeguir.setVisible(false);
        OpcionesCategoria.setVisible(false);
        verLista.setVisible(false);
        AgregarVideoALista.setVisible(false);
        QuitarVideoDeLista.setVisible(false);
        ConsultaLista.setVisible(false);
        
        nickname.setText(this.usuarioSeleccionado.getNickname());
        email.setText(this.usuarioSeleccionado.getEmail());
        nickname.enable(false);
        email.enable(false);
        FechaVerUsuario.setDate(this.usuarioSeleccionado.getFechaNac());
        ModifNombre.setText(this.usuarioSeleccionado.getNombre());
        ModifApellido.setText(this.usuarioSeleccionado.getApellido());
        ModifCanal.setText(this.usuarioSeleccionado.getCanal().getNombre());
        contrasenia.setText(this.usuarioSeleccionado.getContrasenia());
        ModifDescripcion.setText(this.usuarioSeleccionado.getCanal().getDesc());
        BotonPrivado1.setSelected(this.usuarioSeleccionado.getCanal().isPrivado());
        
        //Cargar lista videos
        DefaultListModel model = new DefaultListModel();
        for(String v : s.listarVideos(this.usuarioSeleccionado.getNickname())) {
            model.addElement(v);
        }
        ListVideos.setModel(model);
        
        //Cargar lista de listas
        DefaultListModel model2 = new DefaultListModel();
        for(String l : s.listarListas(this.usuarioSeleccionado.getNickname())) {
            model2.addElement(l);
        }
        ListasReprod.setModel(model2);
        
        //cargar seguidores
        DefaultListModel model3 = new DefaultListModel();
        for(String seg : s.consultaUsuario(this.usuarioSeleccionado.getNickname()).getSeguidores()) {
            model3.addElement(seg);
        }
        ListaSeguidores.setModel(model3);
        
        //Cargar seguidos
        DefaultListModel model4 = new DefaultListModel();
        for(String x : s.consultaUsuario(this.usuarioSeleccionado.getNickname()).getSeguidos()) {
            model4.addElement(x);
        }
        ListaSeguidos.setModel(model4);
       
        //Carga Imagen
        ImageIcon ImagenM = new ImageIcon(this.usuarioSeleccionado.getImagen());
        String pathM = this.usuarioSeleccionado.getImagen();
        PanelImagen.setIcon(ImagenM);
        PanelImagen.setText(pathM);
        
//        centrar(VerUsuario, OperacionesSobreUsuarios);
    }//GEN-LAST:event_ConsultaModifDatosActionPerformed
                                     
    private void ModifVideosUsuarioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ModifVideosUsuarioButtonActionPerformed
        AltaVideo.setVisible(false);
        AltaUsuario.setVisible(false);
        CrearLista.setVisible(false);
        VerCategorias.setVisible(false);
        VerVideo.setVisible(true);
        VerUsuario.setVisible(false);
        OperacionesSobreUsuarios.setVisible(false);
        SeguirUsuario.setVisible(false);
        DejarSeguir.setVisible(false);
        OpcionesCategoria.setVisible(false);
        verLista.setVisible(false);
        AgregarVideoALista.setVisible(false);
        QuitarVideoDeLista.setVisible(false);
        ConsultaLista.setVisible(false);
        
        DefaultListModel model = new DefaultListModel();
        for(String v : s.listarVideos(this.usuarioSeleccionado.getNickname())) {
            model.addElement(v);
        }
        ListaVideos.setModel(model);
        
        CambioCategorias.removeAllItems();
        for (DTCategoria c : m.getCategorias()){
            CambioCategorias.addItem(c.getNombre());
        }
            
        //Cargar comboBox usuarios para comentarios y valoraciones
        usuarioValora.removeAllItems();
        for (String u : m.listarUsuarios()){
            if(!u.equals(this.usuarioSeleccionado.getNickname()))
                usuarioValora.addItem(u);
        }
        
//        centrar(VerVideo, OperacionesSobreUsuarios);
    }//GEN-LAST:event_ModifVideosUsuarioButtonActionPerformed

    private void ComboBoxCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboBoxCategoriaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ComboBoxCategoriaActionPerformed

    private void ListarCategoriasButtionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ListarCategoriasButtionActionPerformed
       String categoria = ListaCategoriasPrincipal.getSelectedValue();
       nomCategoria.setText(categoria);
       nomCategoria.enable(false);
       DefaultListModel model = new DefaultListModel();
       if (s.consultaVideosPorCategoria(categoria) != null) {
        for(DTVideoUsuario v : s.consultaVideosPorCategoria(categoria)) {
             String video = v.getVideo() + "(" + v.getUsuario() + ")";
             model.addElement(video);
         }
         NombreUsuarioVideo.setModel(model);
       }
       
       if (s.consultaListasPorCategoria(categoria) != null){
        DefaultListModel model1 = new DefaultListModel();
        for(DTListaUsuario l : s.consultaListasPorCategoria(categoria)) {
            String lista = l.getLista() + "(" + l.getUsuario() + ")";
            model1.addElement(lista);
        }
        NombreUsuarioListaRep.setModel(model1);
       }
              
//       centrar(OpcionesCategoria, VerCategorias);
    }//GEN-LAST:event_ListarCategoriasButtionActionPerformed

    private void CambioDescripActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CambioDescripActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CambioDescripActionPerformed

    private void ModifListaRepButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ModifListaRepButtonActionPerformed
    String listaNombre = ListasReprod.getSelectedValue();
    String usuario = this.usuarioSeleccionado.getNickname();
    DTLista lista = s.consultaLista(usuario, listaNombre);
    CategoriaListaRep.removeAllItems();
    for (DTCategoria c : m.getCategorias()){
        CategoriaListaRep.addItem(c.getNombre());
    }
       
    if(this.usuarioSeleccionado != null){
        DefaultListModel model = new DefaultListModel();
        for(DTLista l : s.listasParticulares(this.usuarioSeleccionado.getNickname()))
            model.addElement(l.getNombre());
        listasConsultarLista.setModel(model);
    }
    
        
    MostrarNombre.setText(lista.getNombre());
    Privacidad.setSelected(lista.isPrivado());
    String tipo;
    if (lista.isPorDefecto()== true){
        tipo = "Por Defecto";
    }
    else{
        tipo= "Particular";
    }
    MostrarTipo.setText(tipo);
    CategoriaListaRep.setSelectedItem(lista.getCategoria());
    
    MostrarNombre.enable(false);
    MostrarTipo.enable(false);
//    centrar(verLista, VerUsuario);
    }//GEN-LAST:event_ModifListaRepButtonActionPerformed

    private void ModifVideosButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ModifVideosButtonActionPerformed
        DefaultListModel model = new DefaultListModel();
        for(String v : s.listarVideos(this.usuarioSeleccionado.getNickname())) {
            model.addElement(v);
        }
        ListaVideos.setModel(model);
        
        CambioCategorias.removeAllItems();
        for (DTCategoria c : m.getCategorias()){
            CambioCategorias.addItem(c.getNombre());
        }
        DTVideo video;
        if (this.videoSeleccionado != null){
            video = s.consultarVideo(this.usuarioSeleccionado.getNickname(), this.videoSeleccionado);
            if (video.getNombre() != null && !video.getNombre().isEmpty())
                CambioNombre.setText(video.getNombre());
            if (video.getUrl() != null && !video.getUrl().isEmpty())
                CambioUrrl.setText(video.getUrl());
            if (video.getDescripcion() != null && !video.getDescripcion().isEmpty())
                CambioDescrip.setText(video.getDescripcion());
            if(video.getDuracion() != null && !video.getDuracion().isEmpty())
                CambioDuracion.setText(video.getDuracion());
            if(video.getFecha() != null)
                cambioFecha.setDate(video.getFecha());
            if (video.getCategoria().isEmpty() || video.getCategoria() == null)
                CambioCategorias.setSelectedIndex(0);
            else
                CambioCategorias.setSelectedItem(video.getCategoria());
            if (video.isPrivado() == true)
                PrivadoCheck.setSelected(true);
           
             //Cargar Valoraciones
            DefaultListModel model1 = new DefaultListModel();
            List<String> listaMG = s.listarMG(this.usuarioSeleccionado.getNickname(), this.videoSeleccionado);
            if(!(listaMG.isEmpty()) && listaMG != null){
                for (String mg : listaMG)
                    model1.addElement(mg);
            }
            ListaMeGusta.setModel(model1);
            
            DefaultListModel model2 = new DefaultListModel();
            List<String> listaNMG = s.listarNMG(this.usuarioSeleccionado.getNickname(), this.videoSeleccionado);
            if(!(listaNMG.isEmpty()) && listaNMG != null){
                for (String nmg : listaNMG)
                    model2.addElement(nmg);
            }
            ListaNoMeGusta.setModel(model2);
            
            //Cargar comboBox usuarios para comentarios y valoraciones
            usuarioValora.removeAllItems();
            for (String u : m.listarUsuarios()){
                if(!u.equals(this.usuarioSeleccionado.getNickname()))
                    usuarioValora.addItem(u);
            }
            
//            centrar(VerVideo, VerUsuario);
        }
        else
            JOptionPane.showMessageDialog(this, "Video no encontrado.", "Error", JOptionPane.ERROR_MESSAGE);
    }//GEN-LAST:event_ModifVideosButtonActionPerformed

    private void ConfirmCambiosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConfirmCambiosActionPerformed
        s.modificarUsuario(nickname.getText(), contrasenia.getText(), ModifNombre.getText(), ModifApellido.getText(), 
            FechaVerUsuario.getDate(), DirImagen.getText(), ModifCanal.getText(), ModifDescripcion.getText(), BotonPrivado1.isSelected());
        
        JOptionPane.showMessageDialog(this, "Usuario modificado.", "Exito", JOptionPane.INFORMATION_MESSAGE);
        VerUsuario.dispose();
    }//GEN-LAST:event_ConfirmCambiosActionPerformed

    private void ComentarVideoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComentarVideoButtonActionPerformed
        // TODO add your handling code here:
        String usuarioComentario = usuarioValora.getSelectedItem().toString();
        String comentarioTexto = ComentarioComent.getText();
        DTComentario comentario = new DTComentario(comentarioTexto, usuarioComentario);
        if(!(this.ComentarioComent.getText().equals(""))){
            DefaultMutableTreeNode select = (DefaultMutableTreeNode) Comentarios.getLastSelectedPathComponent();
            Integer SelectedId;
            if(select!=null)
                SelectedId = select.getIndex(select);
            else
                SelectedId=0;
            s.comentarVideo(usuarioValora1.getSelectedItem().toString(), comentario, ListaVideos.getSelectedValue(), SelectedId);
            
            //PopulateTree(Comentarios);
        }        
    }//GEN-LAST:event_ComentarVideoButtonActionPerformed

//    private void PopulateTree(JTree tree){
//        DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("General");
//        CreCatTree.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
//        
//        Categoria categoria=is.GetCategoria();
//        DefaultTreeModel model = (DefaultTreeModel)tree.getModel();
//        DefaultMutableTreeNode root = (DefaultMutableTreeNode)model.getRoot();
//        Iterator it = categoria.getHijos().iterator();
//        while(it.hasNext()){
//            root.add(RecursivePopulate((Categoria)it.next()));
//        }
//        model.reload(root);
//        tree.revalidate();   
//        
//    }
//    
//    private DefaultMutableTreeNode RecursivePopulate(Categoria c){
//        DefaultMutableTreeNode nodo= new DefaultMutableTreeNode(c.getNombreCat());
//        Iterator it=c.getHijos().iterator();
//        Categoria aux;
//        while(it.hasNext()){
//            aux=(Categoria)it.next();
//            nodo.add(RecursivePopulate(aux));
//        }
//        return nodo;
//    }
    
    private void confirmarCambiosVideoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmarCambiosVideoActionPerformed
        DTVideo video = new DTVideo(CambioNombre.getText(), CambioDescrip.getText(), DuracionVideo.getText(), cambioFecha.getDate(), 
                CambioUrrl.getText(), PrivadoCheck.isSelected(), CambioCategorias.getSelectedItem().toString());
        s.modificarVideo(video, usuarioValora1.getSelectedItem().toString(), ListaVideos.getSelectedValue());
        JOptionPane.showMessageDialog(this, "Video modificado.", "Exito", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_confirmarCambiosVideoActionPerformed

    private void SeguirBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SeguirBotonActionPerformed
        AltaVideo.setVisible(false);
        AltaUsuario.setVisible(false);
        CrearLista.setVisible(false);
        VerCategorias.setVisible(false);
        VerVideo.setVisible(false);
        VerUsuario.setVisible(false);
        OperacionesSobreUsuarios.setVisible(false);
        SeguirUsuario.setVisible(true);
        DejarSeguir.setVisible(false);
        OpcionesCategoria.setVisible(false);
        verLista.setVisible(false);
        AgregarVideoALista.setVisible(false);
        QuitarVideoDeLista.setVisible(false);
        ConsultaLista.setVisible(false);
        
        ASeguir.removeAllItems();
        List<String> seguidos = this.usuarioSeleccionado.getSeguidos();
        for (DTUsuario u : m.getUsuarios()){
            if (seguidos.contains(u.getNickname()) == false && !u.equals(this.usuarioSeleccionado.getNickname()))
            ASeguir.addItem(u.getNickname());
        }
//        centrar(SeguirUsuario, OperacionesSobreUsuarios);
    }//GEN-LAST:event_SeguirBotonActionPerformed

    private void DuracionVideoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DuracionVideoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DuracionVideoActionPerformed

    private void ModifApellidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ModifApellidoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ModifApellidoActionPerformed

    private void ASeguirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ASeguirActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ASeguirActionPerformed

    private void CambioCategoriasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CambioCategoriasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CambioCategoriasActionPerformed

    private void PrivadoCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PrivadoCheckActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PrivadoCheckActionPerformed

    private void CambioNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CambioNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CambioNombreActionPerformed

    private void ComentarioComentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComentarioComentActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ComentarioComentActionPerformed

    private void ListVideosValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_ListVideosValueChanged
        this.videoSeleccionado = ListVideos.getSelectedValue();
    }//GEN-LAST:event_ListVideosValueChanged

    private void ListasReprodValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_ListasReprodValueChanged

    }//GEN-LAST:event_ListasReprodValueChanged

    private void ListaUsuariosValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_ListaUsuariosValueChanged
        String usuario = ListaUsuarios.getSelectedValue();
        if (usuario != null)
        this.usuarioSeleccionado = s.consultaUsuario(usuario);
    }//GEN-LAST:event_ListaUsuariosValueChanged

    private void M4IConsultarCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_M4IConsultarCategoriaActionPerformed
        AltaVideo.setVisible(false);
        AltaUsuario.setVisible(false);
        CrearLista.setVisible(false);
        VerCategorias.setVisible(false);
        VerVideo.setVisible(false);
        VerUsuario.setVisible(false);
        OperacionesSobreUsuarios.setVisible(false);
        SeguirUsuario.setVisible(false);
        DejarSeguir.setVisible(false);
        OpcionesCategoria.setVisible(true);
        verLista.setVisible(false);
        AgregarVideoALista.setVisible(false);
        QuitarVideoDeLista.setVisible(false);
        ConsultaLista.setVisible(false);

        DefaultListModel model = new DefaultListModel();
        for(DTCategoria c : m.getCategorias()) {
            model.addElement(c.getNombre());
        }
        ListaCategoriasPrincipal.setModel(model);
        ListarCategoriasButtion.setVisible(true);
//        centrar(VerCategorias);
    }//GEN-LAST:event_M4IConsultarCategoriaActionPerformed

    private void ListaVideosValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_ListaVideosValueChanged
        List<DTCategoria> C = m.getCategorias();
        CambioCategorias.removeAllItems();
        for(int i=0; i<C.size(); i++)
            CambioCategorias.addItem(C.get(i).getNombre());
        
        String v1 = ListaVideos.getSelectedValue();
        DTVideo video = s.consultarVideo(usuarioValora1.getSelectedItem().toString(), v1);
        
        if(video != null){
            if (video.getNombre() != null && !video.getNombre().isEmpty())
                CambioNombre.setText(video.getNombre());
            if (video.getUrl() != null && !video.getUrl().isEmpty())
                CambioUrrl.setText(video.getUrl());
            if (video.getDescripcion() != null && !video.getDescripcion().isEmpty())
                CambioDescrip.setText(video.getDescripcion());
            if(video.getDuracion() != null && !video.getDuracion().isEmpty())
                CambioDuracion.setText(video.getDuracion());
            if(video.getFecha() != null)
                cambioFecha.setDate(video.getFecha());
            if (video.getCategoria().isEmpty() || video.getCategoria() == null)
                CambioCategorias.setSelectedIndex(0);
            else
                CambioCategorias.setSelectedItem(video.getCategoria());
            if (video.isPrivado() == true)
                PrivadoCheck.setSelected(true);
           
            //Cargar Valoraciones
            DefaultListModel model1 = new DefaultListModel();
            List<String> listaMG = s.listarMG(usuarioValora1.getSelectedItem().toString(), ListaVideos.getSelectedValue());
            if(listaMG != null){
                listaMG.forEach((mg) -> {
                    model1.addElement(mg);
                });
            }
            else
                model1.addElement("0 MG");
            ListaMeGusta.setModel(model1);
            
            DefaultListModel model2 = new DefaultListModel();
            List<String> listaNMG = s.listarNMG(usuarioValora1.getSelectedItem().toString(), ListaVideos.getSelectedValue());
            if(listaNMG != null){
                listaNMG.forEach((nmg) -> {
                    model2.addElement(nmg);
                });
            }
            else
                model2.addElement("0 NMG");
            ListaNoMeGusta.setModel(model2);
            
            usuarioValora.removeAllItems();
            List<DTUsuario> Us = m.getUsuarios();
            for(int i=0; i<Us.size(); i++)
                usuarioValora.addItem(Us.get(i).getNickname());
            
        }
        else
            JOptionPane.showMessageDialog(this, "Video no encontrado.", "Error", JOptionPane.ERROR_MESSAGE);
    }//GEN-LAST:event_ListaVideosValueChanged

    private void SeguirButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SeguirButtonActionPerformed
        if (ASeguir.getSelectedIndex() == 0)
            JOptionPane.showMessageDialog(this, "Seleccione un usuario.", "Error", JOptionPane.ERROR_MESSAGE);
        else{
            String u = ASeguir.getSelectedItem().toString();
            if(u != null){
                s.seguirUsuario(this.usuarioSeleccionado.getNickname(), u);
                JOptionPane.showMessageDialog(this, "Usuario Seguido.", "Exito", JOptionPane.INFORMATION_MESSAGE);
            }else
                JOptionPane.showMessageDialog(this, "Usuario no encontrado.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_SeguirButtonActionPerformed

    private void DejarDeSeguirBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DejarDeSeguirBotonActionPerformed
        AltaVideo.setVisible(false);
        AltaUsuario.setVisible(false);
        CrearLista.setVisible(false);
        VerCategorias.setVisible(false);
        VerVideo.setVisible(false);
        VerUsuario.setVisible(false);
        OperacionesSobreUsuarios.setVisible(false);
        SeguirUsuario.setVisible(false);
        DejarSeguir.setVisible(true);
        OpcionesCategoria.setVisible(false);
        verLista.setVisible(false);
        AgregarVideoALista.setVisible(false);
        QuitarVideoDeLista.setVisible(false);
        ConsultaLista.setVisible(false);

        ListaSeguidos.removeAll();
        this.usuarioSeleccionado.getSeguidos().forEach((u) -> {
            ListarQuitar.addItem(u);
        });
    }//GEN-LAST:event_DejarDeSeguirBotonActionPerformed

    private void SeguirButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SeguirButton1ActionPerformed
        if (ListasQuitar.getSelectedIndex() == 0)
            JOptionPane.showMessageDialog(this, "Seleccione un usuario.", "Error", JOptionPane.ERROR_MESSAGE);
        else{
            String u = ListarQuitar.getSelectedItem().toString();
            if (u == null)
                JOptionPane.showMessageDialog(this, "Usuario no encontrado.", "Error", JOptionPane.ERROR_MESSAGE);
            else{
                s.dejarDeSeguirUsuario(this.usuarioSeleccionado.getNickname(), u);
                JOptionPane.showMessageDialog(this, "Dejo de seguir al usuario.", "Exito", JOptionPane.INFORMATION_MESSAGE);
            }
        }
    }//GEN-LAST:event_SeguirButton1ActionPerformed

    private void MeGustaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MeGustaButtonActionPerformed
        DTValoracion v;
        String user = usuarioValora.getSelectedItem().toString();
       
        if (ListaVideos.getSelectedValue() != null && user != null){
            v = new DTValoracion(true, usuarioValora.getSelectedItem().toString(), ListaVideos.getSelectedValue());
            s.valorarVideo(usuarioValora1.getSelectedItem().toString(), ListaVideos.getSelectedValue(), v);
            JOptionPane.showMessageDialog(this, "Video valorado.", "Exito", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_MeGustaButtonActionPerformed

    private void NoMeGustaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NoMeGustaButtonActionPerformed
        DTValoracion v;
        String user = usuarioValora.getSelectedItem().toString();
        
        if (ListaVideos.getSelectedValue() != null && user != null){
            v = new DTValoracion(false, usuarioValora.getSelectedItem().toString(), ListaVideos.getSelectedValue());
            s.valorarVideo(usuarioValora1.getSelectedItem().toString(), ListaVideos.getSelectedValue(), v);
            JOptionPane.showMessageDialog(this, "Video valorado.", "Exito", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_NoMeGustaButtonActionPerformed

    private void ListaNoMeGustaValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_ListaNoMeGustaValueChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_ListaNoMeGustaValueChanged

    private void ListaMeGustaValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_ListaMeGustaValueChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_ListaMeGustaValueChanged

    private void CambioUrrlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CambioUrrlActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CambioUrrlActionPerformed

    private void M3IAgregarVideoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_M3IAgregarVideoActionPerformed
//        UsuAgregarVideo1.removeAllItems();
//        UsuAgregarLista1.removeAllItems();

        AltaVideo.setVisible(false);
        AltaUsuario.setVisible(false);
        CrearLista.setVisible(false);
        VerCategorias.setVisible(false);
        VerVideo.setVisible(false);
        VerUsuario.setVisible(false);
        OperacionesSobreUsuarios.setVisible(false);
        SeguirUsuario.setVisible(false);
        DejarSeguir.setVisible(false);
        OpcionesCategoria.setVisible(false);
        verLista.setVisible(false);
        AgregarVideoALista.setVisible(true);
        QuitarVideoDeLista.setVisible(false);
        ConsultaLista.setVisible(false);
               
        m.getUsuarios().stream().map((u) -> {
            UsuAgregarVideo1.addItem(u.getNickname());
            return u;
        }).forEachOrdered((u) -> {
            UsuAgregarLista1.addItem(u.getNickname());
        });
        
        for (int i = 0; i < UsuAgregarVideo1.getItemCount(); i++){
            for (int j = i+1; j < UsuAgregarLista1.getItemCount(); j++){
                if(UsuAgregarVideo1.getItemAt(i).equals(UsuAgregarVideo1.getItemAt(j)))
                    UsuAgregarVideo1.removeItemAt(j);
                if(UsuAgregarLista1.getItemAt(i).equals(UsuAgregarLista1.getItemAt(j)))
                    UsuAgregarLista1.removeItemAt(j);
            }
        }
        UsuAgregarVideo1.setSelectedIndex(0);
        UsuAgregarLista1.setSelectedIndex(0);
        
//        centrar(AgregarVideoALista);
    }//GEN-LAST:event_M3IAgregarVideoActionPerformed

    private void M3IQuitarVideoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_M3IQuitarVideoActionPerformed
        AltaVideo.setVisible(false);
        AltaUsuario.setVisible(false);
        CrearLista.setVisible(false);
        VerCategorias.setVisible(false);
        VerVideo.setVisible(false);
        VerUsuario.setVisible(false);
        OperacionesSobreUsuarios.setVisible(false);
        SeguirUsuario.setVisible(false);
        DejarSeguir.setVisible(false);
        OpcionesCategoria.setVisible(false);
        verLista.setVisible(false);
        AgregarVideoALista.setVisible(false);
        QuitarVideoDeLista.setVisible(true);
        ConsultaLista.setVisible(false);

        m.getUsuarios().forEach((u) -> {
            UsuQuitarVideo.addItem(u.getNickname());
        });
        
        for (int i = 0; i < UsuQuitarVideo.getItemCount(); i++){
            for (int j = i+1; j < UsuQuitarVideo.getItemCount(); j++){
                if(UsuQuitarVideo.getItemAt(i).equals(UsuQuitarVideo.getItemAt(j)))
                    UsuQuitarVideo.removeItemAt(j);
            }
        }
        
        UsuQuitarVideo.setSelectedIndex(0);
        
//        centrar(QuitarVideoDeLista);
    }//GEN-LAST:event_M3IQuitarVideoActionPerformed

        
    private void ModifImagenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ModifImagenActionPerformed
        JFileChooser file = new JFileChooser();
        file.setCurrentDirectory(new File(System.getProperty("user.home")));
        FileNameExtensionFilter filter = new FileNameExtensionFilter("*.Images", "jpg","png");
        file.addChoosableFileFilter(filter);
        int result = file.showSaveDialog(null);
            if(result == JFileChooser.APPROVE_OPTION){
                File selectedFile = file.getSelectedFile();
                String path = selectedFile.getAbsolutePath();
                ImageIcon Imagen = new ImageIcon(path);
                PanelImagen.setIcon(Imagen);
                PanelImagen.setText(path);
                DirImagen.setText(path);
            }
            else if(result == JFileChooser.CANCEL_OPTION){
                System.out.println("No hay Seleccion");
            }
    }//GEN-LAST:event_ModifImagenActionPerformed

    private void listasConsultarListaValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listasConsultarListaValueChanged
        String listaNombre = listasConsultarLista.getSelectedValue();
        Lista lista = m.buscarLista(listaNombre, lu.getSelectedValue());
        CategoriaListaRep.removeAllItems();
        List<DTCategoria> cate = m.getCategorias();
        for(int i=0; i<cate.size(); i++)
            CategoriaListaRep.addItem(cate.get(i).getNombre());
        
        if(lista != null)
        {
            System.out.print(lista.getNombre());
            MostrarNombre.setText(lista.getNombre());
            Privacidad.setSelected(lista.isPrivado());
            String tipo;
            if (lista.isPorDefecto()== true){
                tipo = "Por Defecto";
            }
            else{
                tipo= "Particular";
            }
            MostrarTipo.setText(tipo);
            CategoriaListaRep.setSelectedItem(lista.getCategoria());

            MostrarNombre.enable(false);
            MostrarTipo.enable(false);
        }
        else
            JOptionPane.showMessageDialog(this, "No se a podido cargar la lista", "Error", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_listasConsultarListaValueChanged

    private void ModificarListaUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ModificarListaUsuarioActionPerformed
        AltaVideo.setVisible(false);
        AltaUsuario.setVisible(false);
        CrearLista.setVisible(false);
        VerCategorias.setVisible(false);
        VerVideo.setVisible(false);
        VerUsuario.setVisible(false);
        OperacionesSobreUsuarios.setVisible(false);
        SeguirUsuario.setVisible(false);
        DejarSeguir.setVisible(false);
        OpcionesCategoria.setVisible(false);
        verLista.setVisible(true);
        AgregarVideoALista.setVisible(false);
        QuitarVideoDeLista.setVisible(false);
        ConsultaLista.setVisible(false);
    
    //cargar categoria de la lista
    CategoriaListaRep.removeAllItems();
    for (DTCategoria c : m.getCategorias()){
        CategoriaListaRep.addItem(c.getNombre());
    }
    
    //cargar listas de usuario
    if(this.usuarioSeleccionado != null){
        DefaultListModel model = new DefaultListModel();
        for(DTLista l : s.listasParticulares(this.usuarioSeleccionado.getNickname()))
            model.addElement(l.getNombre());
        listasConsultarLista.setModel(model);
    }
    
    MostrarNombre.enable(false);
    MostrarTipo.enable(false);
//    centrar(verLista, OperacionesSobreUsuarios);
    }//GEN-LAST:event_ModificarListaUsuarioActionPerformed

    private void confirmarCambiosListaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmarCambiosListaActionPerformed
        s.modificarListaPart(lu.getSelectedValue(), MostrarNombre.getText(), 
        CategoriaListaRep.getSelectedItem().toString(), Privacidad.isSelected());
        JOptionPane.showMessageDialog(this, "Lista de reproduccion modificada.", "Exito", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_confirmarCambiosListaActionPerformed

    private void UsuAgregarVideo1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UsuAgregarVideo1ActionPerformed
//        if(UsuAgregarVideo1.)
//        this.usuarioSeleccionado = s.consultaUsuario(UsuAgregarVideo1.getSelectedItem().toString());
//        //VideosAgregar1.removeAll();
//        
//        DefaultListModel model = new DefaultListModel();
//        for (String v : s.listarVideos(UsuAgregarVideo1.getSelectedItem().toString()))
//                model.addElement(v);
//        VideosAgregar1.setModel(model);
    }//GEN-LAST:event_UsuAgregarVideo1ActionPerformed

    private void UsuAgregarLista1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UsuAgregarLista1ActionPerformed
//        DefaultListModel model = new DefaultListModel();
//        for (String l : s.listarListas(UsuAgregarLista1.getSelectedItem().toString()))
//                model.addElement(l);
//        ListasAgregar1.setModel(model);
    }//GEN-LAST:event_UsuAgregarLista1ActionPerformed

    private void BotonAgregarALista1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonAgregarALista1ActionPerformed
        if (VideosAgregar1.getSelectedValue() == null)
            JOptionPane.showMessageDialog(this, "Seleccione un video.", "Error", JOptionPane.ERROR_MESSAGE);
        if (ListasAgregar1.getSelectedValue() == null)
            JOptionPane.showMessageDialog(this, "Seleccione una lista.", "Error", JOptionPane.ERROR_MESSAGE);
        if(UsuAgregarVideo1.getSelectedItem().toString() != null &&
            VideosAgregar1.getSelectedValue() != null && UsuAgregarLista1.getSelectedItem().toString() != null &&
            ListasAgregar1.getSelectedValue() != null){
                s.agregarVideoAlista(UsuAgregarVideo1.getSelectedItem().toString(), VideosAgregar1.getSelectedValue(),
                UsuAgregarLista1.getSelectedItem().toString(), ListasAgregar1.getSelectedValue());
                JOptionPane.showMessageDialog(this, "Video agregado", "Exito", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_BotonAgregarALista1ActionPerformed

    private void UsuQuitarVideoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UsuQuitarVideoActionPerformed
        //Cargar lista de listas
        DefaultListModel model2 = new DefaultListModel();
        if(UsuQuitarVideo.getSelectedItem() != null){
            for(String l : s.listarListas(UsuQuitarVideo.getSelectedItem().toString())) {
                model2.addElement(l);
            }
            ListasQuitar.setModel(model2);
        }
        else
             JOptionPane.showMessageDialog(this, "Seleccione un usuario.", "Error", JOptionPane.ERROR_MESSAGE);
    }//GEN-LAST:event_UsuQuitarVideoActionPerformed

    private void ListasQuitarValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_ListasQuitarValueChanged
        if(UsuQuitarVideo.getSelectedItem() != null){
//            if (ListasQuitar.getSelectedValue() != null){
                DefaultListModel model = new DefaultListModel();
                s.listarVideosLista(UsuQuitarVideo.getSelectedItem().toString(), ListasQuitar.getSelectedValue()).forEach((v) -> {
                    model.addElement(v);
            });
                VideosQuitar.setModel(model);
//            }
//            else
//                JOptionPane.showMessageDialog(this, "Seleccione una lista.", "Error", JOptionPane.ERROR_MESSAGE);
        }
        else
            JOptionPane.showMessageDialog(this, "Seleccione un usuario.", "Error", JOptionPane.ERROR_MESSAGE);
    }//GEN-LAST:event_ListasQuitarValueChanged

    private void BotonQuitarVideoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonQuitarVideoActionPerformed
         if(UsuQuitarVideo.getSelectedItem() != null){
            if (ListasQuitar.getSelectedValue() != null){
                if(VideosQuitar.getSelectedValue() != null){
                    s.quitarVideoDeLista(UsuQuitarVideo.getSelectedItem().toString(), VideosQuitar.getSelectedValue(), ListasQuitar.getSelectedValue());
                    JOptionPane.showMessageDialog(this, "Video removido de la lista", "Exito", JOptionPane.INFORMATION_MESSAGE);
                }
                else
                    JOptionPane.showMessageDialog(this, "Seleccione un video.", "Error", JOptionPane.ERROR_MESSAGE);
            }
            else
                JOptionPane.showMessageDialog(this, "Seleccione una lista.", "Error", JOptionPane.ERROR_MESSAGE);
        }
        else
            JOptionPane.showMessageDialog(this, "Seleccione un usuario.", "Error", JOptionPane.ERROR_MESSAGE);
        
    }//GEN-LAST:event_BotonQuitarVideoActionPerformed

    private void UsuAgregarVideo1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_UsuAgregarVideo1ItemStateChanged
        if(UsuAgregarVideo1.getSelectedItem().toString() != null && !UsuAgregarVideo1.getSelectedItem().toString().isEmpty()){
            this.usuarioSeleccionado = s.consultaUsuario(UsuAgregarVideo1.getSelectedItem().toString());

             DefaultListModel model = new DefaultListModel();
             s.listarVideos(UsuAgregarVideo1.getSelectedItem().toString()).forEach((v) -> {
                 model.addElement(v);
            });
             VideosAgregar1.setModel(model);
        }
    }//GEN-LAST:event_UsuAgregarVideo1ItemStateChanged

    private void UsuAgregarLista1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_UsuAgregarLista1ItemStateChanged
        if(UsuAgregarLista1.getSelectedItem().toString()!= null && !UsuAgregarLista1.getSelectedItem().toString().isEmpty()){
            DefaultListModel model = new DefaultListModel();
            for (String l : s.listarListas(UsuAgregarLista1.getSelectedItem().toString()))
                    model.addElement(l);
            ListasAgregar1.setModel(model);
        }
    }//GEN-LAST:event_UsuAgregarLista1ItemStateChanged

    private void M3IConsultaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_M3IConsultaActionPerformed
        AltaVideo.setVisible(false);
        AltaUsuario.setVisible(false);
        CrearLista.setVisible(false);
        VerCategorias.setVisible(false);
        VerVideo.setVisible(false);
        VerUsuario.setVisible(false);
        OperacionesSobreUsuarios.setVisible(false);
        SeguirUsuario.setVisible(false);
        DejarSeguir.setVisible(false);
        OpcionesCategoria.setVisible(false);
        verLista.setVisible(false);
        AgregarVideoALista.setVisible(false);
        QuitarVideoDeLista.setVisible(false);
        ConsultaLista.setVisible(true);

        DefaultListModel model = new DefaultListModel();
        for (DTUsuario u : m.getUsuarios()){
            model.addElement(u.getNickname());
        }
        ListaUsuarios.setModel(model);
        ConsultaModifDatos.setVisible(false);
        SeguirBoton.setVisible(false);
        DejarDeSeguirBoton.setVisible(false);
        ModifVideosUsuarioButton.setVisible(false);
        ModificarListaUsuario.setVisible(false);
        ConsultaListaUsuario.setVisible(true);
//        centrar(OperacionesSobreUsuarios);
    }//GEN-LAST:event_M3IConsultaActionPerformed

    private void ConsultaListaUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConsultaListaUsuarioActionPerformed
        AltaVideo.setVisible(false);
        AltaUsuario.setVisible(false);
        CrearLista.setVisible(false);
        VerCategorias.setVisible(false);
        VerVideo.setVisible(false);
        VerUsuario.setVisible(false);
        OperacionesSobreUsuarios.setVisible(false);
        SeguirUsuario.setVisible(false);
        DejarSeguir.setVisible(false);
        OpcionesCategoria.setVisible(false);
        verLista.setVisible(false);
        AgregarVideoALista.setVisible(false);
        QuitarVideoDeLista.setVisible(false);
        ConsultaLista.setVisible(true);
        
        //cargar listas de usuario
        if(this.usuarioSeleccionado != null){
            DefaultListModel model = new DefaultListModel();
            for(String l : s.listarListas(this.usuarioSeleccionado.getNickname()))
                model.addElement(l);
            ListaDeListasRep1.setModel(model);
        }
        
//        centrar(ConsultaLista, OperacionesSobreUsuarios);
    }//GEN-LAST:event_ConsultaListaUsuarioActionPerformed

    private void ListaVideosModelValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_ListaVideosModelValueChanged
        this.videoSeleccionado = ListaVideosModel.getSelectedValue();
    }//GEN-LAST:event_ListaVideosModelValueChanged

    private void ListaDeListasRep1ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_ListaDeListasRep1ValueChanged
        String listaNombre = ListaDeListasRep1.getSelectedValue();   //para la lista seleccionada
        DTLista lista = s.consultaLista(this.usuarioSeleccionado.getNickname(), listaNombre); 
        
        //Cargar lista de videos que tiene esa lista
        DefaultListModel model2 = new DefaultListModel();
        for(String v : s.listarVideosLista(this.usuarioSeleccionado.getNickname(), lista.getNombre())) {
            model2.addElement(v);
        }
        ListaVideosModel.setModel(model2);
        
        MostrarNombre1.setText(lista.getNombre());
        Privacidad1.setSelected(lista.isPrivado());
        String tipo;
        if (lista.isPorDefecto()== true){
            tipo = "Por Defecto";
        }
        else{
            tipo= "Particular";
        }
        MostrarTipo1.setText(tipo);
        MostrarCatLista.setText(lista.getCategoria());
        
    }//GEN-LAST:event_ListaDeListasRep1ValueChanged

    private void MostrarNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MostrarNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MostrarNombreActionPerformed

    private void ConsultarVideoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConsultarVideoActionPerformed
        DefaultListModel model = new DefaultListModel();
        for(String v : s.listarVideos(this.usuarioSeleccionado.getNickname())) {
            model.addElement(v);
        }
        
        ListaVideos.setModel(model);
        
        CambioCategorias.removeAllItems();
        for (DTCategoria c : m.getCategorias()){
            CambioCategorias.addItem(c.getNombre());
        }
        DTVideo video;
        if (this.videoSeleccionado != null){
            video = s.consultarVideo(this.usuarioSeleccionado.getNickname(), this.videoSeleccionado);
            if (video.getNombre() != null && !video.getNombre().isEmpty())
                CambioNombre.setText(video.getNombre());
            if (video.getUrl() != null && !video.getUrl().isEmpty())
                CambioUrrl.setText(video.getUrl());
            if (video.getDescripcion() != null && !video.getDescripcion().isEmpty())
                CambioDescrip.setText(video.getDescripcion());
            if(video.getDuracion() != null && !video.getDuracion().isEmpty())
                CambioDuracion.setText(video.getDuracion());
            if(video.getFecha() != null)
                cambioFecha.setDate(video.getFecha());
            if (video.getCategoria().isEmpty() || video.getCategoria() == null)
                CambioCategorias.setSelectedIndex(0);
            else
                CambioCategorias.setSelectedItem(video.getCategoria());
            if (video.isPrivado() == true)
                PrivadoCheck.setSelected(true);
           
             //Cargar Valoraciones
            DefaultListModel model1 = new DefaultListModel();
            List<String> listaMG = s.listarMG(this.usuarioSeleccionado.getNickname(), this.videoSeleccionado);
            if(!(listaMG.isEmpty()) && listaMG != null){
                for (String mg : listaMG)
                    model1.addElement(mg);
            }
            ListaMeGusta.setModel(model1);
            
            DefaultListModel model2 = new DefaultListModel();
            List<String> listaNMG = s.listarNMG(this.usuarioSeleccionado.getNickname(), this.videoSeleccionado);
            if(!(listaNMG.isEmpty()) && listaNMG != null){
                for (String nmg : listaNMG)
                    model2.addElement(nmg);
            }
            ListaNoMeGusta.setModel(model2);
            
            //Cargar comboBox usuarios para comentarios y valoraciones
            usuarioValora.removeAllItems();
            for (String u : m.listarUsuarios()){
                if(!u.equals(this.usuarioSeleccionado.getNickname()))
                    usuarioValora.addItem(u);
            }
            
//            centrar(VerVideo, VerUsuario);
        }
        else
            JOptionPane.showMessageDialog(this, "Video no encontrado.", "Error", JOptionPane.ERROR_MESSAGE);                      
//        centrar(VerVideo, ConsultaLista);
    }//GEN-LAST:event_ConsultarVideoActionPerformed

    private void MostrarCatListaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MostrarCatListaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MostrarCatListaActionPerformed

    private void VerUsuarioInternalFrameClosing(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_VerUsuarioInternalFrameClosing
    CuadroImagen.setIcon(null);
    CuadroImagen.setText(null);
    PanelImagen.setIcon(null);
    PanelImagen.setText(null);
    }//GEN-LAST:event_VerUsuarioInternalFrameClosing

    private void AltaUsuarioInternalFrameClosing(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_AltaUsuarioInternalFrameClosing
        CuadroImagen.setIcon(null);
        CuadroImagen.setText(null);
        PanelImagen.setIcon(null);
        PanelImagen.setText(null);
    }//GEN-LAST:event_AltaUsuarioInternalFrameClosing

    private void EntradaContraseniaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EntradaContraseniaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_EntradaContraseniaActionPerformed

    private void RegistroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RegistroActionPerformed
        DTCanal canal;
        boolean Priva;
       
        if(EntradaNomCanal.getText().length() == 0)
        {
            Priva = true;
            canal = new DTCanal(EntradaNombre.getText(), EntradaDescripcionCanal.getText(), Priva, null, null);
        }
        else
        canal = new DTCanal(EntradaNomCanal.getText(), EntradaDescripcionCanal.getText(), BotonPrivado.isSelected(), null, null);

        DTUsuario usuario = new DTUsuario(EntradaNick.getText(),EntradaContrasenia.getText() , EntradaNombre.getText(), EntradaApellido.getText(),
            EntradaCorreoEl.getText(), Fecha.getDate(), CuadroImagen.getText(), canal, false);
        if(!EntradaNick.getText().equals("") && !EntradaCorreoEl.getText().equals("")){
            if(m.nicknameLibre(EntradaNick.getText())){
                if(m.mailLibre(EntradaCorreoEl.getText())){
                    s.altaUsuario(usuario, canal);
                }
                else{
                    JOptionPane.showMessageDialog(this, "Email en uso", "Error", JOptionPane.ERROR_MESSAGE);
                    return;
                }
            }
            else{
                JOptionPane.showMessageDialog(this, "Nickname en uso", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            JOptionPane.showMessageDialog(this, "Usuario creado.", "Exito", JOptionPane.INFORMATION_MESSAGE);

            this.EntradaNick.setText("");
            this.EntradaNombre.setText("");
            this.EntradaContrasenia.setText("");
            this.EntradaApellido.setText("");
            this.EntradaCorreoEl.setText("");
            this.CuadroImagen.setText("");
            this.EntradaNomCanal.setText("");
            this.EntradaDescripcionCanal.setText("");
            AltaUsuario.dispose();
        }
        else{
            JOptionPane.showMessageDialog(this, "Campos vacios", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_RegistroActionPerformed

    private void EntradaDescripcionCanalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EntradaDescripcionCanalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_EntradaDescripcionCanalActionPerformed

    private void EntradaNomCanalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EntradaNomCanalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_EntradaNomCanalActionPerformed

    private void JFileCImagenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JFileCImagenActionPerformed
        JFileChooser file = new JFileChooser();
        file.setCurrentDirectory(new File(System.getProperty("user.home")));
        FileNameExtensionFilter filter = new FileNameExtensionFilter("*.Images", "jpg","png");
        file.addChoosableFileFilter(filter);
        int result = file.showSaveDialog(null);
        if(result == JFileChooser.APPROVE_OPTION){
            File selectedFile = file.getSelectedFile();
            String path = selectedFile.getAbsolutePath();
            ImageIcon Imagen = new ImageIcon(path);

            Image imgEscalada = Imagen.getImage().getScaledInstance(CuadroImagen.getWidth(), CuadroImagen.getHeight(), Image.SCALE_SMOOTH);
            Icon iconoEscalado = new ImageIcon(imgEscalada);
            CuadroImagen.setIcon(iconoEscalado);
            //CuadroImagen.setIcon(Imagen);
            CuadroImagen.setText(path);
        }
        else if(result == JFileChooser.CANCEL_OPTION){
            System.out.println("No hay Seleccion");
        }
    }//GEN-LAST:event_JFileCImagenActionPerformed

    private void BotonPrivadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonPrivadoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BotonPrivadoActionPerformed

    private void EntradaCorreoElActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EntradaCorreoElActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_EntradaCorreoElActionPerformed

    private void EntradaApellidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EntradaApellidoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_EntradaApellidoActionPerformed

    private void EntradaNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EntradaNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_EntradaNombreActionPerformed

    private void EntradaNickActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EntradaNickActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_EntradaNickActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        BotonPrivado.setVisible(true);
        EntradaNomCanal.setVisible(true);
        NomCanal.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void EntradaNomVidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EntradaNomVidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_EntradaNomVidActionPerformed

    private void ModifCanalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ModifCanalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ModifCanalActionPerformed

    private void DirImagenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DirImagenActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DirImagenActionPerformed

    private void luValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_luValueChanged
        //System.out.print(lu.getSelectedValue().toString());
        String UsuNombre = lu.getSelectedValue().toString();
        UsuarioActual = m.buscarUsuario(UsuNombre);
        
        DefaultListModel model = new DefaultListModel();
        for(Lista u : m.getListas(UsuNombre)){
            model.addElement(u.getNombre());
        }
        listasConsultarLista.setModel(model);
    }//GEN-LAST:event_luValueChanged

    private void luMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_luMouseClicked
       
    }//GEN-LAST:event_luMouseClicked

    private void UsuQuitarVideoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_UsuQuitarVideoItemStateChanged
        if(UsuQuitarVideo.getSelectedItem().toString()!= null && !UsuQuitarVideo.getSelectedItem().toString().isEmpty()){
            DefaultListModel model = new DefaultListModel();
            for (String l : s.listarListas(UsuAgregarLista1.getSelectedItem().toString()))
                    model.addElement(l);
            ListasQuitar.setModel(model);
        }
    }//GEN-LAST:event_UsuQuitarVideoItemStateChanged

    private void ListarQuitarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ListarQuitarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ListarQuitarActionPerformed

    private void EditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditarActionPerformed
        DefaultMutableTreeNode selectedNode = (DefaultMutableTreeNode) Comentarios.getSelectionPath().getLastPathComponent();

        selectedNode.setUserObject(ComentarioComent.getText());

        DefaultTreeModel model = (DefaultTreeModel)Comentarios.getModel();
        model.reload();
    }//GEN-LAST:event_EditarActionPerformed

    private void BorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BorrarActionPerformed
        DefaultMutableTreeNode selectedNode = (DefaultMutableTreeNode) Comentarios.getSelectionPath().getLastPathComponent();

        if(selectedNode != Comentarios.getModel().getRoot())
        {
            DefaultTreeModel model = (DefaultTreeModel)Comentarios.getModel();

            model.removeNodeFromParent(selectedNode);

            model.reload();
        }
    }//GEN-LAST:event_BorrarActionPerformed

    private void usuarioValoraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usuarioValoraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_usuarioValoraActionPerformed

    private void usuarioValora1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usuarioValora1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_usuarioValora1ActionPerformed

    private void usuarioValora1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_usuarioValora1ItemStateChanged
        Usuario U = m.obtenerUsuarioPorNickname(usuarioValora1.getSelectedItem().toString());
        List<Video> V = U.getCanal().getVideos();
        if(V.size() > 0)
        {
            DefaultListModel model = new DefaultListModel();
            for(int i=0; i<V.size(); i++)
            {
                model.addElement(V.get(i).getNombre());
                System.out.print(V.get(i).getNombre());
            }
            ListaVideos.setModel(model);
        }
        else
            JOptionPane.showMessageDialog(this, "Este Usuario no tiene Videos asociados", "Error", JOptionPane.ERROR_MESSAGE);

    }//GEN-LAST:event_usuarioValora1ItemStateChanged

    private void BotonPrivado1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonPrivado1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BotonPrivado1ActionPerformed

    private void ModifDescripcionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ModifDescripcionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ModifDescripcionActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Sistema.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Sistema.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Sistema.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Sistema.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>m

//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(() -> {
            new Sistema().setVisible(true);
//        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> ASeguir;
    private javax.swing.JButton AgragarCategoriaButton;
    private javax.swing.JTextField AgregarCategoria;
    private javax.swing.JInternalFrame AgregarVideoALista;
    private javax.swing.JInternalFrame AltaUsuario;
    private javax.swing.JInternalFrame AltaVideo;
    private javax.swing.JButton AltaVideoButton;
    private javax.swing.JLabel Apellido;
    private javax.swing.JLabel Apellidolabs;
    private javax.swing.JLabel Apellidolabs1;
    private javax.swing.JLabel Apellidolabs2;
    private javax.swing.JMenuBar BarraMenuSistema;
    private javax.swing.JButton Borrar;
    private javax.swing.JToggleButton BotonAgregarALista1;
    private javax.swing.JCheckBox BotonPrivado;
    private javax.swing.JCheckBox BotonPrivado1;
    private javax.swing.JToggleButton BotonQuitarVideo;
    private javax.swing.JComboBox<String> CambioCategorias;
    private javax.swing.JTextField CambioDescrip;
    private javax.swing.JTextField CambioDuracion;
    private javax.swing.JTextField CambioNombre;
    private javax.swing.JTextField CambioUrrl;
    private javax.swing.JLabel CatLAb;
    private javax.swing.JLabel CatLAbels;
    private javax.swing.JComboBox<String> CategoriaComboBox;
    private javax.swing.JComboBox<String> CategoriaListaRep;
    private javax.swing.JComboBox ComboBoxCategoria;
    private javax.swing.JLabel ComentLabl;
    private javax.swing.JButton ComentarVideoButton;
    private javax.swing.JTextField ComentarioComent;
    private javax.swing.JTree Comentarios;
    private javax.swing.JButton ConfirmCambios;
    private javax.swing.JButton ConfirmarListPriv;
    private javax.swing.JInternalFrame ConsultaLista;
    private javax.swing.JButton ConsultaListaUsuario;
    private javax.swing.JButton ConsultaModifDatos;
    private javax.swing.JButton ConsultarVideo;
    private javax.swing.JLabel Contra;
    private javax.swing.JLabel Contrasenia;
    private javax.swing.JLabel Correo;
    private javax.swing.JInternalFrame CrearLista;
    private javax.swing.JLabel CuadroImagen;
    private javax.swing.JButton DejarDeSeguirBoton;
    private javax.swing.JInternalFrame DejarSeguir;
    private javax.swing.JLabel Desc;
    private javax.swing.JLabel DescLabl;
    private javax.swing.JTextArea DescVideo;
    private javax.swing.JLabel Descrip;
    private javax.swing.JTextField DirImagen;
    private javax.swing.JLabel Duracion;
    private javax.swing.JLabel DuracionLabl;
    private javax.swing.JTextField DuracionVideo;
    private javax.swing.JButton Editar;
    private javax.swing.JTextField EntradaApellido;
    private javax.swing.JTextField EntradaContrasenia;
    private javax.swing.JTextField EntradaCorreoEl;
    private javax.swing.JTextField EntradaDescripcionCanal;
    private javax.swing.JTextField EntradaNick;
    private javax.swing.JTextField EntradaNomCanal;
    private javax.swing.JTextField EntradaNomVid;
    private javax.swing.JTextField EntradaNombre;
    private javax.swing.JTextField EntradaURLVid;
    private javax.swing.JLabel Fech;
    private com.toedter.calendar.JDateChooser Fecha;
    private javax.swing.JLabel FechaComentLabl;
    private com.toedter.calendar.JDateChooser FechaComentValor;
    private com.toedter.calendar.JDateChooser FechaVerUsuario;
    private javax.swing.JLabel Fechalab;
    private javax.swing.JLabel Fechalabl;
    private javax.swing.JLabel Fechlabels;
    private javax.swing.JButton JFileCImagen;
    private javax.swing.JLabel Label4;
    private javax.swing.JLabel Label5;
    private javax.swing.JLabel Lisreplabel;
    private javax.swing.JList<String> ListVideos;
    private javax.swing.JList<String> ListaCategoriasPrincipal;
    private javax.swing.JList<String> ListaDeListasRep1;
    private javax.swing.JList<String> ListaMeGusta;
    private javax.swing.JList<String> ListaNoMeGusta;
    private javax.swing.JLabel ListaRepLabel;
    private javax.swing.JLabel ListaRepLabel1;
    private javax.swing.JLabel ListaRepListLabel2;
    private javax.swing.JList<String> ListaSeguidores;
    private javax.swing.JList<String> ListaSeguidos;
    private javax.swing.JList<String> ListaUsuarios;
    private javax.swing.JList<String> ListaVideos;
    private javax.swing.JList<String> ListaVideosModel;
    private javax.swing.JButton ListarCategoriasButtion;
    private javax.swing.JComboBox<String> ListarQuitar;
    private javax.swing.JList<String> ListasAgregar1;
    private javax.swing.JList<String> ListasQuitar;
    private javax.swing.JList<String> ListasReprod;
    private javax.swing.JMenuItem M1IAltaUsuario;
    private javax.swing.JMenuItem M1IOperacionesUsuarios;
    private javax.swing.JMenuItem M1ISeguirUsuario;
    private javax.swing.JMenuItem M2IAltaVid;
    private javax.swing.JMenuItem M2IOperacionesVideo;
    private javax.swing.JMenuItem M3IAgregarVideo;
    private javax.swing.JMenuItem M3IConsulta;
    private javax.swing.JMenuItem M3ICrearListRep;
    private javax.swing.JMenuItem M3IOperacionesListaRep;
    private javax.swing.JMenuItem M3IQuitarVideo;
    private javax.swing.JMenuItem M4IAltaCat;
    private javax.swing.JMenuItem M4IConsultarCategoria;
    private javax.swing.JMenuItem M4IListarCat;
    private javax.swing.JButton MeGustaButton;
    private javax.swing.JMenu Menu1Usuarios;
    private javax.swing.JMenu Menu2Videos;
    private javax.swing.JMenu Menu3Listas;
    private javax.swing.JMenu Menu4Categorias;
    private javax.swing.JTextField ModifApellido;
    private javax.swing.JTextField ModifCanal;
    private javax.swing.JTextField ModifDescripcion;
    private javax.swing.JButton ModifImagen;
    private javax.swing.JButton ModifListaRepButton;
    private javax.swing.JTextField ModifNombre;
    private javax.swing.JButton ModifVideosButton;
    private javax.swing.JButton ModifVideosUsuarioButton;
    private javax.swing.JButton ModificarListaUsuario;
    private javax.swing.JTextField MostrarCatLista;
    private javax.swing.JTextField MostrarNombre;
    private javax.swing.JTextField MostrarNombre1;
    private javax.swing.JTextField MostrarTipo;
    private javax.swing.JTextField MostrarTipo1;
    private javax.swing.JLabel Nick;
    private javax.swing.JLabel NickNameLabl;
    private javax.swing.JLabel Nickname;
    private javax.swing.JButton NoMeGustaButton;
    private javax.swing.JLabel Nom;
    private javax.swing.JLabel NomCanal;
    private javax.swing.JTextField NomListaRep;
    private javax.swing.JLabel Nombr;
    private javax.swing.JLabel NombreLabelInfo;
    private javax.swing.JLabel NombreLabelInfo1;
    private javax.swing.JList<String> NombreUsuarioListaRep;
    private javax.swing.JList<String> NombreUsuarioVideo;
    private javax.swing.JLabel Nombrelabl;
    private javax.swing.JLabel Nombreliostlabel;
    private javax.swing.JInternalFrame OpcionesCategoria;
    private javax.swing.JInternalFrame OperacionesSobreUsuarios;
    private javax.swing.JLabel PanelImagen;
    private javax.swing.JCheckBox Privacidad;
    private javax.swing.JCheckBox Privacidad1;
    private javax.swing.JCheckBox PrivacidadCheck;
    private javax.swing.JCheckBox PrivacidadCheckbox;
    private javax.swing.JCheckBox PrivadoCheck;
    private javax.swing.JInternalFrame QuitarVideoDeLista;
    private javax.swing.JButton Registro;
    private javax.swing.JScrollPane ScrollListaUsuarios;
    private javax.swing.JScrollPane ScrollUsuLista;
    private javax.swing.JScrollPane ScrollUsuVid;
    private javax.swing.JScrollPane ScrollerDescVid;
    private javax.swing.JScrollPane ScrollerListCategoriasPrincipal;
    private javax.swing.JScrollPane ScrollerListRep;
    private javax.swing.JScrollPane ScrollerListRep1;
    private javax.swing.JScrollPane ScrollerListRep2;
    private javax.swing.JScrollPane ScrollerListVid;
    private javax.swing.JScrollPane ScrollerListVid1;
    private javax.swing.JScrollPane ScrollerListVid2;
    private javax.swing.JScrollPane ScrollerListVid3;
    private javax.swing.JScrollPane ScrollerSeguidores;
    private javax.swing.JScrollPane ScrollerUsuariosSeguidos;
    private javax.swing.JScrollPane Scrollercomments;
    private javax.swing.JLabel Seguidoslab;
    private javax.swing.JButton SeguirBoton;
    private javax.swing.JButton SeguirButton;
    private javax.swing.JButton SeguirButton1;
    private javax.swing.JInternalFrame SeguirUsuario;
    private javax.swing.JLabel Tipo;
    private javax.swing.JLabel TipoLabelInfo;
    private javax.swing.JLabel URLLAbl;
    private javax.swing.JLabel Url;
    private javax.swing.JLabel Usu;
    private javax.swing.JComboBox<String> UsuAgregarLista1;
    private javax.swing.JComboBox<String> UsuAgregarVideo1;
    private javax.swing.JComboBox<String> UsuQuitarVideo;
    private javax.swing.JComboBox<String> UsuarioComboBox;
    private javax.swing.JComboBox<String> UsuarioComboBox1;
    private javax.swing.JLabel UsuarioListaLAbel2;
    private javax.swing.JLabel UsuarioListaLabel1;
    private javax.swing.JLabel UsuarioListaLabel2;
    private javax.swing.JInternalFrame VerCategorias;
    private javax.swing.JInternalFrame VerUsuario;
    private javax.swing.JInternalFrame VerVideo;
    private javax.swing.JLabel VidLAbel;
    private javax.swing.JList<String> VideosAgregar1;
    private javax.swing.JLabel VideosListaLabel2;
    private javax.swing.JList<String> VideosQuitar;
    private com.toedter.calendar.JDateChooser cambioFecha;
    private javax.swing.JButton confirmarCambiosLista;
    private javax.swing.JButton confirmarCambiosVideo;
    private javax.swing.JTextField contrasenia;
    private javax.swing.JTextField email;
    private javax.swing.JLabel emaillabels;
    private javax.swing.JButton jButton1;
    private com.toedter.calendar.JDateChooser jDateChooserAltaVideo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JList<String> listasConsultarLista;
    private javax.swing.JList<String> lu;
    private javax.swing.JTextField nickname;
    private javax.swing.JTextField nomCategoria;
    private javax.swing.JLabel nomlabelss;
    private javax.swing.JCheckBox porDefecto;
    private javax.swing.JLabel seguidoreslab;
    private javax.swing.JComboBox<String> usuarioValora;
    private javax.swing.JComboBox<String> usuarioValora1;
    private javax.swing.JInternalFrame verLista;
    // End of variables declaration//GEN-END:variables
}
